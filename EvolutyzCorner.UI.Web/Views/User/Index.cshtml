@model Evolutyz.Entities.UserEntity
@{
    ViewBag.Title = "User Management - User";
    // Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.10.0/jquery.validate.min.js"></script>
<link href="~/plugins/datatables/dataTables.bootstrap.css" rel="stylesheet" />
<script src="~/plugins/datatables/jquery.dataTables.min.js"></script>
<script src="~/plugins/datatables/dataTables.bootstrap.min.js"></script>
<script src="~/Scripts/date.format.js"></script>
<script src="~/Scripts/bootstrap-datepicker.js"></script>
<script src="~/Scripts/bootstrap-datepicker.min.js"></script>
<script src="~/EvolutyzCornerScripts/UserManagement.js"></script>
<link href="~/plugins/Jcrop/jquery.Jcrop.min.css" rel="stylesheet" />


<style type="text/css">


    .file-upload-input {
        position: absolute;
        margin: 0;
        padding: 0;
        width: 100%;
        height: 100%;
        outline: none;
        opacity: 0;
        cursor: pointer;
    }

    .image-upload-wrap {
        border: 1px solid #dcdcdc;
        position: relative;
        margin-top: auto;
        text-align: center;
        padding: 30px 20px 20px;
    }

        .image-upload-wrap > input[type=file].file-upload-input {
            /*opacity: 1;
        position: static;*/
            left: 0;
            top: 0;
            bottom: 0;
            right: 0;
            /*height: auto;
            left: 25%;
            width: auto;*/
        }

            .image-upload-wrap > input[type=file].file-upload-input ~ label:not(.error) {
                color: #20487b;
                border: 1px solid #dcdcdc;
                max-width: 80%;
                font-size: 15px;
                text-overflow: ellipsis;
                white-space: nowrap;
                cursor: pointer;
                display: inline-block;
                margin: 10px auto;
                font-weight: 300;
                padding: 2px 8px;
            }
</style>
<style>

    .jcrop-holder > img.file-upload-image {
        /*width: 100% !important;
        height: 100% !important;*/
        max-height: inherit;
        max-width: inherit;
        padding: 0;
    }

    #image_input > .jcrop-holder {
        margin: auto;
        /*max-height: 200px;
        max-width: 200px;
        margin: 20px auto;*/
    }
</style>


<style type="text/css">
    .row.boot4 {
        display: flex;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: -moz-box;
        display: -o-flex;
        flex-wrap: wrap;
    }

        .row.boot4 > .col-md-4 {
            width: 100%;
        }

    @@media (min-width: 992px) {
        .row.boot4 > .col-md-4 {
            width: 33.33333333%;
            flex: 0 0 33.333333%;
            max-width: 33.333333%;
        }
    }

    #usertable.actions1 > thead > tr > th:last-child,
    #usertable.actions1 > tbody > tr > td:last-child {
        display: none
    }

    #holidaytable.holidayaction > thead > tr > th:last-child,
    #holidaytable.holidayaction > tbody > tr > td:last-child {
        display: none
    }

    #Projecttable.projaction > thead > tr > th:last-child,
    #Projecttable.projaction > tbody > tr > td:last-child {
        display: none
    }

    input.form-control.validate_msg ~ span.field-validation-valid:before {
        content: "";
        position: absolute;
        bottom: -15px;
        left: 15px;
        font-size: 10px;
        color: red;
    }

    label.error {
        position: absolute;
        bottom: -20px;
        left: 25px;
        font-size: 10px;
        color: red;
    }

    .modal .form-control + label.error {
        position: static;
    }

    .form-group {
        position: relative;
    }

    #Usr_Username.validate_msg ~ span:before {
        content: "UserName already Exists";
    }

    #Email.validate_msg ~ span:before {
        content: "Loginid already Exists";
    }

    #HolidayName.validate_msg ~ span:before {
        content: "HolidayName Already Exist In this Client";
    }

    #HolidayDate.validate_msg ~ span:before {
        content: "HolidayDate Already Exist In this Client";
    }


    #HolidayDate.validatemsg ~ span:before {
        content: "Please Select Correct financialyear";
    }

    #clientprojecttitle.validate_msg ~ span:before {
        content: "Project Name Already Existed";
    }

    #Proj_ProjectName.validate_msg ~ span:before {
        content: "Client Name Already Existed";
    }

    #AssociateEmpGrid.modal {
        z-index: 1045;
    }

    .center {
        display: block;
        margin-left: auto;
        margin-right: auto;
        width: 50%;
    }

    .profile-image {
        /*-webkit-clip-path: polygon(0% 0%, 100% 0%, 100% 350%, 0% 0%);*/
        width: 50px;
        height: 50px;
        margin-left: 25px;
        /*background-size: 100% 100%;
        background-repeat: no-repeat;
        background-position: center;
        background-image: url(/upload/Images/default.PNG);*/
    }

    a.btn-icn {
        display: none
    }

    a.btn-icn-hide {
        display: inline-block
    }

    /*.form-control {
        width: 100%;
    }*/

    .modal-footer.padding-015 {
        padding: 5px;
    }

        .modal-footer.padding-015 > .btn {
            padding: 2px 8px;
        }

    .panel-brown {
        border-color: #e4a385;
    }

        .panel-brown > .panel-heading {
            background-image: -webkit-linear-gradient(top, #f9d9cb 0%, #e4b49e 100%);
            background-image: -o-linear-gradient(top, #f9d9cb 0%, #e4b49e 100%);
            background-image: -webkit-gradient(linear, left top, left bottom, from(#e4b49e), to(#faf2cc));
            background-image: linear-gradient(to bottom, #f9d9cb 0%, #e4b49e 100%);
            filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff9d9cb', endColorstr='#ffe4b49e', GradientType=0);
            background-repeat: repeat-x;
            color: #976048 !important;
            border-color: #e4a385;
        }
</style>
<style>
    table.tbl-appendGrid {
        border-radius: 10px;
        border-collapse: separate;
        border-spacing: 2px;
    }

    #appendRow.btn-clr {
        border-radius: 50%;
        font-size: 25px;
        padding: 0;
        min-height: inherit;
        height: 40px;
        line-height: 40px;
        width: 40px;
        margin: 10px;
        text-align: center;
        background: -webkit-linear-gradient(135deg,#f37a41,#f8c26c);
        background: linear-gradient(135deg,#f37a41,#f8c26c);
        color: #fff;
        border-color: #fdae81;
    }

    table.tbl-appendGrid > tbody > tr > td,
    table.tbl-appendGrid > tbody > tr > th {
        border: none;
    }

    table.tbl-appendGrid > tbody > tr:nth-child(odd) {
        background-color: #f5f5f5;
    }

    table.tbl-appendGrid > tbody > tr > th[align] {
        text-align: center;
    }

    table.tbl-appendGrid > tbody > tr:first-child > th[align]:first-child {
        border-top-left-radius: 10px;
    }

    table.tbl-appendGrid > tbody > tr:first-child > th[align]:first-child {
        border-top-right-radius: 10px;
    }

    table.tbl-appendGrid > tbody > tr:last-child > td[align]:first-child {
        border-bottom-left-radius: 10px;
    }

    table.tbl-appendGrid > tbody > tr:last-child > td[align]:last-child {
        border-bottom-right-radius: 10px;
    }

    table.tbl-appendGrid > tbody > tr > td {
    }
</style>
<style type="text/css">
    strong.label-control {
        display: block;
        margin-bottom: 10px;
    }

    .line-align {
        display: flex;
        align-items: center;
        margin: 0 0 15px;
    }

        .line-align.hidden-xs {
            flex-flow: column;
        }

        .line-align > div[class^='m'][class$='-5'] {
            border-bottom: 1px solid #d0d0d0;
            width: 100%;
        }

        .line-align > div.mr-5 {
            margin-right: 30px
        }

        .line-align > div.ml-5 {
            margin-left: 30px
        }

        .line-align > span.text-muted {
            text-transform: uppercase;
            font-weight: 700;
            padding: 0 10px
        }

        .line-align.hidden-xs > div[class^='m'][class$='-5'] {
            border-bottom: none;
            border-right: 1px solid #d0d0d0;
            height: 100px;
            width: auto;
        }

        .line-align.hidden-xs > div.mr-5 {
            margin-right: 0;
            margin-top: 20px;
        }

        .line-align.hidden-xs > div.ml-5 {
            margin-left: 0;
            margin-bottom: 20px;
        }

        .line-align.hidden-xs > span.text-muted {
            border: 1px solid #ddd;
            border-radius: 50%;
            line-height: 40px;
            box-shadow: 1px 1px 1px 1px rgb(0 0 0 / 25%);
            box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.25);
            text-shadow: 0px 1px 1px rgb(0 0 0 / 50%);
            text-shadow: 0px 1px 1px rgba(0, 0, 0, 0.5);
        }

    .form-group-lg.text-center {
        margin-bottom: 15px;
    }

        .form-group-lg.text-center > label {
            display: block
        }

        .form-group-lg.text-center > .btn-clr {
            border-color: #e49470;
            background: linear-gradient(45deg, #e79f7f, #f5ac8b);
            color: #842800;
        }
</style>

<div class="modal fade-in" id="ContainerGridDetail" role="dialog">

    <div class="modal-dialog modal-custom">
        @*<label id="succ"></label>*@
        <div class="modal-content">
            <div class="modal-header">
                @*<button type="button" class="close" data-dismiss="modal">&times;</button>*@
                <h4 class="modal-title" id="edit">Edit User</h4>
                <h4 class="modal-title" id="add">Add User</h4>
            </div>
            <form id="myform">
                <div class="modal-body">
                    <div class="row" style="display:none;">
                        <div class="form-group col-md-6">
                            <label for="Usr_UserID">Usr_UserID</label>
                            @Html.TextBoxFor(m => m.Usr_UserID, new { @class = "form-control" })

                        </div>
                        <div class="form-group col-md-6">
                            <label for="Usr_UserID">Usr_AccountID</label>
                            @Html.TextBoxFor(m => m.Usr_AccountID, new { @class = "form-control" })
                            @Html.TextBoxFor(m => m.Usr_RoleID, new { @class = "form-control" })
                            @Html.TextBoxFor(m => m.UserType, new { @class = "form-control" })
                        </div>

                    </div>

                    <div class="row">
                        <div class="form-group col-md-4">
                            <label for="AccountName">Organization<font style="color:red;">*</font></label>
                            @Html.DropDownListFor(m => m.AccountName, new SelectList(ViewBag.Accountname, "value", "text"), "Select Account Names", new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.AccountName)
                        </div>
                        <div class="form-group col-md-4">
                            <label for="UserType">Employment Type<font style="color:red;">*</font></label>
                            @Html.DropDownListFor(m => m.Usr_UserTypeID, new SelectList("", ""), new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Usr_UserTypeID)
                        </div>
                        <div class="form-group col-md-4">
                            <label for="RoleName">Role Name<font style="color:red;">*</font></label>
                            @Html.DropDownListFor(m => m.RoleName, new SelectList("", ""), new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.RoleName)
                        </div>

                    </div>
                    <div class="row boot4">
                        @*<div id="Mangerdiv">*@
                        <div class="form-group col-md-4">
                            <label for="Manager1" id="m1">Manager1</label>
                            @Html.DropDownListFor(m => m.ManagerName, new SelectList("", ""), new { @class = "form-control" })

                            @Html.ValidationMessageFor(m => m.ManagerName)
                        </div>
                        <div class="form-group col-md-4">
                            <label for="Manager2" id="m2">Manager2</label>
                            @Html.DropDownListFor(m => m.Managername2, new SelectList("", ""), new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Managername2)
                        </div>

                        @*</div>*@

                        <div class="form-group col-md-4">
                            <label for="Usr_Titleid">Title<font style="color:red;">*</font></label>
                            @Html.DropDownListFor(m => m.Usr_Titleid, new SelectList(ViewBag.usertitle, "value", "text"), "Select Title", new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Usr_Titleid)
                        </div>
                        <div class="form-group col-md-4">
                            <label for="UserName">First Name<font style="color:red;">*</font></label>
                            @Html.TextBoxFor(m => m.UsrP_FirstName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.UsrP_FirstName)
                        </div>
                        <div class="form-group col-md-4">
                            <label for="LoginId">Last Name<font style="color:red;">*</font></label>
                            @Html.TextBoxFor(m => m.UsrP_LastName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.UsrP_LastName)
                        </div>
                        <div class="form-group col-md-4">

                            <div class="form-group" id="image_prev_container">
                                <label for="LoginId">Profile Image</label>
                                <span class="required" style="font-size:small;color:red"></span>
                                <div class="image-upload-wrap">
                                    <input type="file" value="upload" class="file-upload-input" id="fileUpload" name="fileUpload" accept="image/*" />

                                    <div class="img-container" id="image_input"  style="margin:auto">
                                        <img id="profile-image" class="file-upload-image showimage" src="~/Content/images/local-disk.png" alt="Picture">
                                        @*<img id="imgLogo" src='#' class="img-responsive" alt="Logo" width="150" height="55" style="margin-top:15px" />*@

                                    </div>
                                    <label for="fileUpload"> <span>Choose file from local disk</span></label>
                                </div>

                            </div>
                            <div class="previews clearfix" style="display:none">
                                <img id="image_output"  class="img-responsive showimage" alt="" style="margin:auto auto 15px" />
                                <input type="hidden" name="imgCropped" id="imgCropped" />
                                <input type="hidden" name="fullimagevalue" id="fullimagevalue" />
                            </div>
                        </div>

                        @*<div class="form-group col-md-4" style="margin-bottom: 24px;">
                                <label for="LoginId">Profile Image</label>
                                <img id="profile-image" class="profile-image" />
                                @*<div id="profile-image" class="profile-image"></div>

                                <input name="file" type="file" id="fileUpload" style="visibility:hidden" onchange="readURL(this)" />
                                @Html.ValidationMessageFor(m => m.file)
                            </div>*@
                        <div class="form-group col-md-4" style="display:none">
                            <label for="UsrP_EmployeeID">Employee Id<font style="color:red;">*</font></label>
                            @Html.TextBoxFor(m => m.UsrP_EmployeeID, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.UsrP_EmployeeID)
                        </div>
                        <div class="form-group col-md-4">

                            <label for="UserName" style="white-space: nowrap;">User Name<font style="color:red;">*</font></label>
                            @Html.TextBoxFor(m => m.Usr_Username, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Usr_Username)
                        </div>
                        <div class="form-group col-md-4">
                            <label for="LoginId">EmailId<font style="color:red;">*</font></label>
                            @Html.TextBoxFor(m => m.Usr_LoginId, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Usr_LoginId)
                            <label>Note:(login with Username or EmailID)</label>
                        </div>
                        <div class="form-group col-md-4">
                            <label for="Password">Password<font style="color:red;">*</font></label>
                            @Html.PasswordFor(m => m.Usr_Password, new { @class = "form-control", autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.Usr_Password)
                        </div>
                        <div class="form-group col-md-4">
                            <label for="Password">Confirm Password<font style="color:red;">*</font></label>
                            @Html.PasswordFor(m => m.cnf_Password, new { @class = "form-control", autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.cnf_Password)
                        </div>
                        <div class="form-group col-md-4">
                            <label for="UserName">Sign Up Date<font style="color:red;">*</font></label>
                            @Html.TextBoxFor(m => m.Usrp_DOJ, new { @class = "form-control", autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.Usrp_DOJ)
                        </div>
                        <div class="form-group col-md-4">
                            <label for="Status">Status<font style="color:red;">*</font></label>
                            @Html.DropDownListFor(m => m.Usr_isDeleted, new SelectList(new List<Object>{

                           new { value = 0 , text = "Active"},
                           new { value = 1 , text = "InActive"}  }, "value", "text", 2), "Select Status", new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Usr_isDeleted)
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="submit" id="btnUpdate" class="btn btn-clr">Update</button>
                    <button type="submit" id="btnAdd" class="btn btn-clr" style="display:none">Add</button>
                    <button type="button" class="btn btn-clr1" data-target="#warningmsg" data-toggle="modal">Close</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="block-content">
    <div class="">
        <h4 class="heading-fancy">Users </h4>
        <input type="button" id="btnAddModel" value="+" data-toggle="modal" data-backdrop="false" data-keyboard="false" data-target="#ContainerGridDetail" class="btn" /> @*data-backdrop="false" data-keyboard="false"*@
    </div>
    <div class="table-responsive">
        <table id="table">
            <thead>
                <tr>
                    <th>Organization</th>
                    @*<th>User AccountID</th>*@
                    <th>Employment Type</th>
                    <th>Role Name</th>
                    @*<th>Task Name</th>
                        <th>Manager1</th>
                        <th>Manager2</th>*@
                    <th>User Name</th>
                    @*<th>Login</th>
                        <th>Password</th>*@
                    <th>Status</th>
                    <th id="Actions">Action</th>

                </tr>
            </thead>
        </table>
    </div>
</div>

<div id="warningmsg" class="modal" role="dialog">
    <div class="modal-dialog">
        <div id="divAdv" class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">×</button>

            </div>
            <div class="modal-body">
                <h3>Do you really want to close the window.</h3>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-clr" data-dismiss="modal" value="1" id="btnclose">Yes</button>
                <button type="button" class="btn btn-clr1" value="2" data-dismiss="modal" id="cancel">No</button>
            </div>
        </div>
    </div>
</div>


<script src="~/plugins/Jcrop/jquery.Jcrop.min.js"></script>
<script type="text/javascript">
    var fileSelectEle = document.getElementById('fileUpload');

    fileSelectEle.onclick = charge;

    function charge() {
        document.body.onfocus = function () { setTimeout(checkOnCancel, 100); };
    }

    function checkOnCancel() {
        if (fileSelectEle.value.length == 0) {
            $("#fileUpload-error").show();
            $("#profile-image").attr("src", "/Content/images/local-disk.png");
            $("label[for='fileUpload']").next("span").text("Choose file from local disk");
            $("#profile-image").next("div.cropper-container").remove();
            $("#lblchvideoexits").hide();
            $('#image_input > img.file-upload-image').attr('src', '/Content/images/local-disk.png');
            $('#image_input > img.file-upload-image').removeAttr('style');
            $("#image_input > .jcrop-holder").remove();
            $('#image_input > img.file-upload-image').show();
            $('#image_input > img.file-upload-image').css("visibility", "visible");
        } else {
            $("#fileUpload-error").hide();
            //alert('You selected a file - ' + "FileName:" + fileSelectEle.value + "; Length: " + fileSelectEle.value.length);
        }
        document.body.onfocus = null;
    }
    var inputs = document.querySelectorAll('.file-upload-input');
    Array.prototype.forEach.call(inputs, function (input) {
        
        var label = input.nextSibling.nextSibling.nextElementSibling,
            labelVal = label.innerHTML;

        input.addEventListener('change', function (e) {
            var fileName = '';
            if (this.files && this.files.length > 1)
                fileName = (this.getAttribute('data-multiple-caption') || '').replace('{count}', this.files.length);
            else
                fileName = e.target.value.split('\\').pop();

            if (fileName)
                label.querySelector('span').innerHTML = fileName;
            else
                label.innerHTML = labelVal;
        });

        // Firefox bug fix
        input.addEventListener('focus', function () { input.classList.add('has-focus'); });
        input.addEventListener('blur', function () { input.classList.remove('has-focus'); });
    });
</script>
<script>

    var imageLoader = document.getElementById('fileUpload');
    imageLoader.addEventListener('change', handleImage, false);


    function handleImage(e) {
        
        var validExtensions = ['jpg', 'png', 'jpeg', 'PNG'];
        //var fileName = e.target.files[0].name;
        var ki = e.target.files;
        var fileName = ki[0].name;
        console.log(fileName);
        var fileNameExt = fileName.substr(fileName.lastIndexOf('.') + 1);
        if ($.inArray(fileNameExt, validExtensions) == -1) {
            e.target.type = ''
            e.target.type = 'file'
            $("#" + e.target.id + "").next('.img-container').find("img.file-upload-image").attr('src', "");
            $("#lblchvideoexits").show();
        }
        else {
            $("#lblchvideoexits").hide();
            $("#" + e.target.id + "").next('.img-container').find("img.file-upload-image").attr('src', '');
            $("#" + e.target.id + "").next('.img-container').find(".jcrop-holder").remove();
            $("#" + e.target.id + "").next('.img-container').find("img.file-upload-image").show();
            $("#" + e.target.id + "").next('.img-container').find("img.file-upload-image").css("visibility", "visible");

            var reader = new FileReader();

            reader.onload = function (event) {

                var image = new Image();
                var imageW = 400;

                image.onload = function () {

                    var canvas = document.createElement('canvas');

                    canvas.width = image.width;
                    canvas.height = image.height;

                    var ctx = canvas.getContext('2d');
                    ctx.drawImage(image, 0, 0, canvas.width, canvas.height);

                    $("#" + e.target.id + "").next('.img-container').html(['<img src="', canvas.toDataURL(), '" class="file-upload-image" name="fullimage" id="fullimage" />'].join(''));

                    var img = $("#" + e.target.id + "").next('.img-container').find("img.file-upload-image")[0];

                    var myVar = document.querySelectorAll('#image_input img')[0].src

                    console.log(myVar);

                    $("#fullimagevalue").val(myVar);
                    $("#fullimagevalue1").val(myVar);

                    var canvas = document.createElement('canvas');

                    var is_msie = /msie/.test(navigator.userAgent.toLowerCase());
                    var jcrop_obj;

                    if (is_msie) {


                        $("#" + e.target.id + "").next('.img-container').find("img.file-upload-image").Jcrop({
                            boxWidth: 220,
                            bgColor: 'black',
                            bgOpacity: .6,
                            //aspectRatio: 1,
                            aspectRatio: 16 / 9,
                            //aspectRatio: (900 / 300),
                            //minSize: [900, 300],
                            //maxSize: [900, 300],
                            onChange: imgSelect,
                            keySupport: false,
                        });
                    }
                    else {


                        $("#" + e.target.id + "").next('.img-container').find("img.file-upload-image").Jcrop({
                            boxWidth: 220,
                            bgColor: 'black',
                            bgOpacity: .6,
                            //aspectRatio: 1,
                            aspectRatio: 16 / 9,
                            //aspectRatio: (900 / 300),
                            //minSize: [300, 150],
                            //maxSize: [300, 150],
                            onChange: imgSelect,
                            keySupport: false,
                        }, function () { jcrop_obj = this; });

                    }

                    function imgSelect(selection) {
                        canvas.width = 220;
                        canvas.height = 110;
                        //canvas.x = 200;
                        //canvas.y = 200;
                        /*var rx = 100 / coords.w;
                        var ry = 100 / coords.h;

                        $('#image_output').css({
                            width: Math.round(rx * 500) + 'px',
                            height: Math.round(ry * 370) + 'px',
                            marginLeft: '-' + Math.round(rx * coords.x) + 'px',
                            marginTop: '-' + Math.round(ry * coords.y) + 'px'
                        });*/
                        var ctx = canvas.getContext('2d');
                        ctx.drawImage(img, selection.x, selection.y, selection.w, selection.h, 0, 0, canvas.width, canvas.height);
                        //ctx.drawImage(img, selection.x, selection.y, selection.w, selection.h);
                        $('#image_output').attr('src', canvas.toDataURL());
                        $('#imgCropped').attr('src', canvas.toDataURL());

                        //$('#imgCropped').val(canvas.toDataURL());
                        $('#fullimage').val(canvas.toDataURL());
                    }
                }
                image.src = event.target.result;
            }
            reader.readAsDataURL(e.target.files[0]);
        }
    }
</script>

<script type="text/javascript">
        var RoleId;
        var userId;
        RoleId = '@ViewBag.Roleid';
         userId ='@ViewBag.UserId';
        var count = 0;
        var AccountId;
        var userid;
        var acID;
        acID = '@ViewBag.Accountid';

</script>
<script type="text/javascript">
    

     var permissions = '@ViewBag.a';
    if (permissions === "Read/Write") {
            $("#btnAddModel").show();
        $("#Actions").show();
        $("#table").removeClass("Actions");

    } else  {
        $("#btnAddModel").hide();
       // $("#table").addClass("Actions");
   // testing
        $("#Actions").show();
        $("#Actions").text('View');
    }


    $(document).ready(function () {
        if (RoleId === "Super Admin") {

            $("#ManagerName, #Managername2").closest(".form-group.col-md-4").hide();
            //$("#m1").hide();
            //$("#m2").hide();
        }

        $("#User").addClass("active");
        $("#User").siblings().removeClass("active");

        $.fn.noMask = function (regex) {
            this.on("keypress", function (e) {
                if (regex.test(String.fromCharCode(e.which))) {
                    return false;
                }
            });
        };

        //  /^ (0 ? [1 - 9] | [12][0 - 9] | 3[01])[\/\-](0?[1-9]|1[012])[\/\-]\d{4}$/
        // $("#HolidayDate").noMask(/^(((0[1-9]|[12]\d|3[01])\/(0[13578]|1[02])\/((19|[2-9]\d)\d{2}))|((0[1-9]|[12]\d|30)\/(0[13456789]|1[012])\/((19|[2-9]\d)\d{2}))|((0[1-9]|1\d|2[0-8])\/02\/((19|[2-9]\d)\d{2}))|(29\/02\/((1[6-9]|[2-9]\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))))$/g);
        $("#Usrp_DOJ").noMask(/^[\w.,:;"'/!|#%&$*()_-]+$/);
        $("#Usrp_DOJ").noMask(/[$-/:-?{-~!"^_`\[\]]/);
        $("#btnclose").click(function () {
            window.location.reload();
        });

    });
</script>
<script>
    $("#btnAdd").on("click", function () {
        
        $('#myform').validate({
            rules: {
                AccountName: {
                    required: true
                },
                Usr_UserTypeID: {
                    required: true
                },
                RoleName: {
                    required: true
                },
                Usr_Titleid: {
                    required: {
                        depends: function () {
                            $(this).val($.trim($(this).val()));
                            return true;
                        }
                    }
                },
                UsrP_FirstName: {
                    required: {
                        depends: function () {
                            $(this).val($.trim($(this).val()));
                            return true;
                        }
                    },
                    regx: /[^-\s][a-zA-Z_\s-]+/

                },
                UsrP_LastName: {
                    required: {
                        depends: function () {
                            $(this).val($.trim($(this).val()));
                            return true;
                        }
                    },
                    regx: /[^-\s][a-zA-Z_\s-]+/
                },

                Usr_Username: {
                    required: {
                        depends: function () {
                            $(this).val($.trim($(this).val()));
                            return true;
                        }
                    },
                    regx: /^[a-zA-Z0-9]+$/
                },
                Usr_LoginId: {
                    required: {
                        depends: function () {
                            $(this).val($.trim($(this).val()));
                            return true;
                        }
                    },
                    email: true
                },
                Usr_Password: {
                    required: true,
                    regx: /^.*(?=.{8,})(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@@#$%&!]).*$/
                },
                cnf_Password: {
                    required: true,
                   
                    equalTo: "#Usr_Password"
                },
                Usrp_DOJ: {
                    required: true,
                    date: true,
                },
                Usr_isDeleted: {
                    required: true,
                   
                }
            },
            submitHandler: function (form) {
                
                if ($("#Usr_isDeleted").val() === "1") {

                    var Usr_isDeletedVal = true;
                }
                else {
                    Usr_isDeletedVal = false;
                }

                var accountid = $("#AccountName").val();
                var formData = new FormData();


                var file = document.getElementById("fileUpload").files[0];
                if (file == undefined) {
                    formData.append("Usrp_ProfilePicture", file);
                    //formdata.append("imgCropped", '');
                }
                else {
                    var filePath = file.name;
                    var allowedExtensions = /(\.jpg|\.jpeg|\.png)$/i;
                    if (!allowedExtensions.exec(filePath)) {

                        $("#lblchvideoexits").show();
                        return false;
                    }
                    else {

                        $("#lblchvideoexits").hide();
                        var imgSrc = $("#image_output").attr("src");

                        formData.append("Usrp_ProfilePicture", file);
                        formData.append("imgCropped", imgSrc);
                    }

                }

                formData.append("Usr_UserTypeID", $('#Usr_UserTypeID').val());
                //formData.append("Usrp_ProfilePicture", file);
                formData.append("Usr_RoleID", $('#RoleName').val());
                formData.append("Usr_UserID", userId);
                formData.append("Usr_AccountID", accountid);
                formData.append("Usr_Titleid", $("#Usr_Titleid").val());
                formData.append("Usr_TaskID", $('#Usr_TaskID').val());
                formData.append("Usr_Manager", $('#ManagerName').val());
                formData.append("Usr_Manager2", $('#Managername2').val());
                formData.append("Usr_Username", $('#Usr_Username').val());
                formData.append("Usr_LoginId", $('#Usr_LoginId').val());
                formData.append("UsrP_FirstName", $('#UsrP_FirstName').val());
                formData.append("UsrP_LastName", $('#UsrP_LastName').val());
                formData.append("Usr_Password", $('#Usr_Password').val());
                formData.append("Usr_isDeleted", Usr_isDeletedVal);
                formData.append("Usrp_DOJ", $('#Usrp_DOJ').val());
                //formData.append("UsrP_EmployeeID", $('#UsrP_EmployeeID').val());
                $.ajax({
                    type: "POST",
                    url: "/User/CreateUser",
                    data: formData,
                    dataType: "json",
                    // cache: false,
                    complete: function (res) {
                        //var result = JSON.parse(res);
                        if (res.responseText === "UserName already Exists") {
                            $("#Usr_Username").addClass("validate_msg");
                            $("#Usr_LoginId").removeClass("validate_msg");

                        } else if (res.responseText === "Loginid already Exists") {
                            $("#Usr_Username").removeClass("validate_msg");
                            $("#Usr_LoginId").addClass("validate_msg");
                        }
                        else {
                            $("#Usr_Username").removeClass("validate_msg");
                            $("#Usr_LoginId").removeClass("validate_msg");
                            function explode() {
                                alert(res.responseText);
                            }
                            setTimeout(explode, 10);

                            window.location.href = "/User/Index";
                        }


                    },
                    contentType: false,
                    processData: false,
                    error: function (Result) {

                        //alert("Error");

                    }

                });
                return false;
            }
        });
        $.validator.addMethod("regx", function (value, element, regexpr) {
            return regexpr.test(value);
        }, "Please enter  Only Alphabets .");
        $.validator.addMethod("regex", function (value, element, regexpr) {
            return regexpr.test(value);
        }, "Please enter Only Alphabets and Numbers.");
        $.validator.addMethod("reg", function (value, element, regexpr) {
            return regexpr.test(value);
        }, "Password Must contain 1 Capital,1 small,1 number,1 Special Character and length must be 8 and above");


    });

    $("#btnUpdate").on("click", function () {
        
        $('#myform').validate({
            rules: {
                AccountName: {
                    required: true
                },
                Usr_UserTypeID: {
                    required: true
                },
                RoleName: {
                    required: true
                },
                Usr_Titleid: {
                    required: {
                        depends: function () {
                            $(this).val($.trim($(this).val()));
                            return true;
                        }
                    }
                },
                UsrP_FirstName: {
                    required: {
                        depends: function () {
                            $(this).val($.trim($(this).val()));
                            return true;
                        }
                    },
                    regx: /^[a-zA-Z]+$/

                },
                UsrP_LastName: {
                    required: {
                        depends: function () {
                            $(this).val($.trim($(this).val()));
                            return true;
                        }
                    },
                    regx: /^[a-zA-Z]+$/
                },

                Usr_Username: {
                    required: {
                        depends: function () {
                            $(this).val($.trim($(this).val()));
                            return true;
                        }
                    },
                    regx: /^[a-zA-Z0-9]+$/
                },
                Usr_LoginId: {
                    required: {
                        depends: function () {
                            $(this).val($.trim($(this).val()));
                            return true;
                        }
                    },
                    email: true
                },
               
                Usrp_DOJ: {
                    required: true,
                    date: true,
                },
                Usr_isDeleted: {
                    required: true,

                }
            },
            submitHandler: function (form) {
                
                var formData = new FormData();
                if ($("#Usr_isDeleted").val() === "1") {
                    var Usr_isDeletedVal = true;
                }
                else {
                    Usr_isDeletedVal = false;
                }
                var imgSrc = $("#image_output").attr("src");
                var testimgname = $("label[for='fileUpload']").children("span").html();
                var file = document.getElementById("fileUpload").files[0];
                if (file == undefined) {
                    formData.append("Usrp_ProfilePicture", testimgname);
                    formData.append("imgCropped", imgSrc);
                }
                else
                {

                    var filePath = file.name;
                    var allowedExtensions = /(\.jpg|\.jpeg|\.png)$/i;
                    if (!allowedExtensions.exec(filePath)) {

                        $("#lblchvideoexits").show();
                        return false;
                    }
                    else {

                        $("#lblchvideoexits").hide();
                       

                        formData.append("Usrp_ProfilePicture", file);
                        formData.append("imgCropped", imgSrc);
                    }

                }
               
               
                formData.append("Usrp_ProfilePicture", testimgname);

                formData.append("Usr_UserTypeID", $('#Usr_UserTypeID').val());
                formData.append("Usr_RoleID", $('#RoleName').val());
                formData.append("Usr_UserID", userid);
                formData.append("Usr_Titleid", $("#Usr_Titleid").val());
                formData.append("Usr_AccountID", $('#AccountName').val());
                formData.append("Usr_TaskID", $('#Usr_TaskID').val());
                formData.append("Usr_Manager", $('#ManagerName').val());
                formData.append("Usr_Manager2", $('#Managername2').val());
                formData.append("Usr_Username", $('#Usr_Username').val());
                formData.append("Usr_LoginId", $('#Usr_LoginId').val());
                formData.append("UsrP_FirstName", $('#UsrP_FirstName').val());
                formData.append("UsrP_LastName", $('#UsrP_LastName').val());
                formData.append("Usr_Password", $('#Usr_Password').val());
                formData.append("Usr_isDeleted", Usr_isDeletedVal);
                formData.append("Usrp_DOJ", $('#Usrp_DOJ').val());
                //formData.append("UsrP_EmployeeID", $('#UsrP_EmployeeID').val());

                $.ajax({

                    // type: "POST",

                    url: "/User/UpdateUser",
                    cache: false,
                    type: "POST",
                    contentType: false,
                    processData: false,
                    data: formData,
                    complete: function (res) {

                        if (res.responseText === "UserName already Exists") {
                            $("#Usr_Username").addClass("validate_msg");
                            $("#Usr_LoginId").removeClass("validate_msg");

                        } else if (res.responseText === "Loginid already Exists") {
                            $("#Usr_Username").removeClass("validate_msg");
                            $("#Usr_LoginId").addClass("validate_msg");
                        }
                        else {
                            $("#Usr_Username").removeClass("validate_msg");
                            $("#Usr_LoginId").removeClass("validate_msg");
                            function explode() {
                                alert(res.responseText);
                            }
                            setTimeout(explode, 15);

                            window.location.href = "/User/Index";
                        }


                    },

                    error: function (Result) {

                        //alert("Error");

                    }

                });
                
            }
        });
        $.validator.addMethod("regx", function (value, element, regexpr) {
            return regexpr.test(value);
        }, "Please enter  Only Alphabets .");
        $.validator.addMethod("regex", function (value, element, regexpr) {
            return regexpr.test(value);
        }, "Please enter Only Alphabets and Numbers.");
        $.validator.addMethod("reg", function (value, element, regexpr) {
            return regexpr.test(value);
        }, "Password Must contain 1 Capital,1 small,1 number,1 Special Character and length must be 8 and above");




    });

</script>


