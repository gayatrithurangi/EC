//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Evolutyz.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EvolutyzCornerDataEntities : DbContext
    {
        public EvolutyzCornerDataEntities()
            : base("name=EvolutyzCornerDataEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<Acc_Spec_OptionalHolidays> Acc_Spec_OptionalHolidays { get; set; }
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<AccountClient> AccountClients { get; set; }
        public virtual DbSet<AccountDepartment> AccountDepartments { get; set; }
        public virtual DbSet<AccountSocialMediaProfile> AccountSocialMediaProfiles { get; set; }
        public virtual DbSet<AccountSpecificTask> AccountSpecificTasks { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<Assessment_For_Position> Assessment_For_Position { get; set; }
        public virtual DbSet<AttachmentsinTimesheet> AttachmentsinTimesheets { get; set; }
        public virtual DbSet<CandidateInterviewResult> CandidateInterviewResults { get; set; }
        public virtual DbSet<ClientProject> ClientProjects { get; set; }
        public virtual DbSet<ClientProjectsTask> ClientProjectsTasks { get; set; }
        public virtual DbSet<ClientsBusiness> ClientsBusinesses { get; set; }
        public virtual DbSet<comment> comments { get; set; }
        public virtual DbSet<ComponentType> ComponentTypes { get; set; }
        public virtual DbSet<ContentType> ContentTypes { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Device> Devices { get; set; }
        public virtual DbSet<DocumentType> DocumentTypes { get; set; }
        public virtual DbSet<EmployeeBankDetail> EmployeeBankDetails { get; set; }
        public virtual DbSet<EmployeeSalaryComponent> EmployeeSalaryComponents { get; set; }
        public virtual DbSet<EmployeeSalarySlip> EmployeeSalarySlips { get; set; }
        public virtual DbSet<EmployeeSalaryStructure> EmployeeSalaryStructures { get; set; }
        public virtual DbSet<EmployeeSalaryStructureDetail> EmployeeSalaryStructureDetails { get; set; }
        public virtual DbSet<ErrorLog> ErrorLogs { get; set; }
        public virtual DbSet<FinancialYear> FinancialYears { get; set; }
        public virtual DbSet<GenericRole> GenericRoles { get; set; }
        public virtual DbSet<GenericTask> GenericTasks { get; set; }
        public virtual DbSet<HireType> HireTypes { get; set; }
        public virtual DbSet<History_Account> History_Account { get; set; }
        public virtual DbSet<History_LeaveComments> History_LeaveComments { get; set; }
        public virtual DbSet<History_LeaveScheme> History_LeaveScheme { get; set; }
        public virtual DbSet<History_LeaveType> History_LeaveType { get; set; }
        public virtual DbSet<History_Projects> History_Projects { get; set; }
        public virtual DbSet<History_Role> History_Role { get; set; }
        public virtual DbSet<History_UserProjects> History_UserProjects { get; set; }
        public virtual DbSet<History_Users> History_Users { get; set; }
        public virtual DbSet<History_UserType> History_UserType { get; set; }
        public virtual DbSet<History_WFHComments> History_WFHComments { get; set; }
        public virtual DbSet<HolidayCalendar> HolidayCalendars { get; set; }
        public virtual DbSet<Interview_Position_TechnologyStack> Interview_Position_TechnologyStack { get; set; }
        public virtual DbSet<InterviewCandidate> InterviewCandidates { get; set; }
        public virtual DbSet<Issuetype> Issuetypes { get; set; }
        public virtual DbSet<LeaveScheme> LeaveSchemes { get; set; }
        public virtual DbSet<LeaveStatu> LeaveStatus { get; set; }
        public virtual DbSet<LeaveType> LeaveTypes { get; set; }
        public virtual DbSet<Master_Module> Master_Module { get; set; }
        public virtual DbSet<Master_Sub_Module> Master_Sub_Module { get; set; }
        public virtual DbSet<Master_TimesheetMode> Master_TimesheetMode { get; set; }
        public virtual DbSet<MobileNotificationTemplate> MobileNotificationTemplates { get; set; }
        public virtual DbSet<ModuleAccessType> ModuleAccessTypes { get; set; }
        public virtual DbSet<NewsBoard> NewsBoards { get; set; }
        public virtual DbSet<PayMode> PayModes { get; set; }
        public virtual DbSet<Phase> Phases { get; set; }
        public virtual DbSet<Policy> Policies { get; set; }
        public virtual DbSet<Project_workstatus> Project_workstatus { get; set; }
        public virtual DbSet<ProjectPhas> ProjectPhases { get; set; }
        public virtual DbSet<Project> Projects { get; set; }
        public virtual DbSet<ProjectSpecificTask> ProjectSpecificTasks { get; set; }
        public virtual DbSet<QuestionBank> QuestionBanks { get; set; }
        public virtual DbSet<RoleModule> RoleModules { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<SalarySlipDetail> SalarySlipDetails { get; set; }
        public virtual DbSet<Skill> Skills { get; set; }
        public virtual DbSet<SocialMedia> SocialMedias { get; set; }
        public virtual DbSet<State> States { get; set; }
        public virtual DbSet<SubPolicy> SubPolicies { get; set; }
        public virtual DbSet<SubPolicyDocument> SubPolicyDocuments { get; set; }
        public virtual DbSet<TaskDetail> TaskDetails { get; set; }
        public virtual DbSet<TechnologyStack> TechnologyStacks { get; set; }
        public virtual DbSet<TicketImage> TicketImages { get; set; }
        public virtual DbSet<TicketPriority> TicketPriorities { get; set; }
        public virtual DbSet<Ticket> Tickets { get; set; }
        public virtual DbSet<TicketsAuthority> TicketsAuthorities { get; set; }
        public virtual DbSet<TIMESHEET> TIMESHEETs { get; set; }
        public virtual DbSet<Timesheet_Comments> Timesheet_Comments { get; set; }
        public virtual DbSet<UserDevicesToken> UserDevicesTokens { get; set; }
        public virtual DbSet<UserGender> UserGenders { get; set; }
        public virtual DbSet<UserLeaf> UserLeaves { get; set; }
        public virtual DbSet<UserLeaveTypeConsumed> UserLeaveTypeConsumeds { get; set; }
        public virtual DbSet<UserProjectEngagement> UserProjectEngagements { get; set; }
        public virtual DbSet<UserProject> UserProjects { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserSalaryCalculation> UserSalaryCalculations { get; set; }
        public virtual DbSet<UsersForProject> UsersForProjects { get; set; }
        public virtual DbSet<UserSkill> UserSkills { get; set; }
        public virtual DbSet<UserSocialMediaProfile> UserSocialMediaProfiles { get; set; }
        public virtual DbSet<UsersProfile> UsersProfiles { get; set; }
        public virtual DbSet<UserTitle> UserTitles { get; set; }
        public virtual DbSet<UserType> UserTypes { get; set; }
        public virtual DbSet<UserworkfromHome> UserworkfromHomes { get; set; }
        public virtual DbSet<USSalaryComponent> USSalaryComponents { get; set; }
        public virtual DbSet<VisaType> VisaTypes { get; set; }
        public virtual DbSet<RequestMessage> RequestMessages { get; set; }
        public virtual DbSet<database_firewall_rules> database_firewall_rules { get; set; }
    
        [DbFunction("EvolutyzCornerDataEntities", "DateRange_To_Table")]
        public virtual IQueryable<DateRange_To_Table_Result> DateRange_To_Table(string minDate_Str, string maxDate_Str)
        {
            var minDate_StrParameter = minDate_Str != null ?
                new ObjectParameter("minDate_Str", minDate_Str) :
                new ObjectParameter("minDate_Str", typeof(string));
    
            var maxDate_StrParameter = maxDate_Str != null ?
                new ObjectParameter("maxDate_Str", maxDate_Str) :
                new ObjectParameter("maxDate_Str", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DateRange_To_Table_Result>("[EvolutyzCornerDataEntities].[DateRange_To_Table](@minDate_Str, @maxDate_Str)", minDate_StrParameter, maxDate_StrParameter);
        }
    
        [DbFunction("EvolutyzCornerDataEntities", "fn_CountWeekDays")]
        public virtual IQueryable<fn_CountWeekDays_Result> fn_CountWeekDays(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_CountWeekDays_Result>("[EvolutyzCornerDataEntities].[fn_CountWeekDays](@fromdate, @todate)", fromdateParameter, todateParameter);
        }
    
        [DbFunction("EvolutyzCornerDataEntities", "SplitString")]
        public virtual IQueryable<SplitString_Result> SplitString(string input, string character)
        {
            var inputParameter = input != null ?
                new ObjectParameter("Input", input) :
                new ObjectParameter("Input", typeof(string));
    
            var characterParameter = character != null ?
                new ObjectParameter("Character", character) :
                new ObjectParameter("Character", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SplitString_Result>("[EvolutyzCornerDataEntities].[SplitString](@Input, @Character)", inputParameter, characterParameter);
        }
    
        [DbFunction("EvolutyzCornerDataEntities", "udf_weeks_of_month")]
        public virtual IQueryable<udf_weeks_of_month_Result> udf_weeks_of_month(Nullable<System.DateTime> fromdate)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udf_weeks_of_month_Result>("[EvolutyzCornerDataEntities].[udf_weeks_of_month](@fromdate)", fromdateParameter);
        }
    
        public virtual int AddorEditUsersProfileByUser(Nullable<int> userID, string usrFname, string usrLname, string usrEmpId, string usrEmailId, string userMobilenum, string phoneNum, string user_ProfilePath, Nullable<System.DateTime> usrDob, Nullable<System.DateTime> usrDoj, ObjectParameter userProfileID, ObjectParameter trans_Output)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var usrFnameParameter = usrFname != null ?
                new ObjectParameter("UsrFname", usrFname) :
                new ObjectParameter("UsrFname", typeof(string));
    
            var usrLnameParameter = usrLname != null ?
                new ObjectParameter("UsrLname", usrLname) :
                new ObjectParameter("UsrLname", typeof(string));
    
            var usrEmpIdParameter = usrEmpId != null ?
                new ObjectParameter("UsrEmpId", usrEmpId) :
                new ObjectParameter("UsrEmpId", typeof(string));
    
            var usrEmailIdParameter = usrEmailId != null ?
                new ObjectParameter("UsrEmailId", usrEmailId) :
                new ObjectParameter("UsrEmailId", typeof(string));
    
            var userMobilenumParameter = userMobilenum != null ?
                new ObjectParameter("UserMobilenum", userMobilenum) :
                new ObjectParameter("UserMobilenum", typeof(string));
    
            var phoneNumParameter = phoneNum != null ?
                new ObjectParameter("PhoneNum", phoneNum) :
                new ObjectParameter("PhoneNum", typeof(string));
    
            var user_ProfilePathParameter = user_ProfilePath != null ?
                new ObjectParameter("User_ProfilePath", user_ProfilePath) :
                new ObjectParameter("User_ProfilePath", typeof(string));
    
            var usrDobParameter = usrDob.HasValue ?
                new ObjectParameter("UsrDob", usrDob) :
                new ObjectParameter("UsrDob", typeof(System.DateTime));
    
            var usrDojParameter = usrDoj.HasValue ?
                new ObjectParameter("UsrDoj", usrDoj) :
                new ObjectParameter("UsrDoj", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddorEditUsersProfileByUser", userIDParameter, usrFnameParameter, usrLnameParameter, usrEmpIdParameter, usrEmailIdParameter, userMobilenumParameter, phoneNumParameter, user_ProfilePathParameter, usrDobParameter, usrDojParameter, userProfileID, trans_Output);
        }
    
        public virtual int AddSubmitTaskDetails(Nullable<int> timesheetID, Nullable<int> projectID, Nullable<int> taskID, string hoursWorked, Nullable<System.DateTime> taskDate)
        {
            var timesheetIDParameter = timesheetID.HasValue ?
                new ObjectParameter("TimesheetID", timesheetID) :
                new ObjectParameter("TimesheetID", typeof(int));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            var hoursWorkedParameter = hoursWorked != null ?
                new ObjectParameter("HoursWorked", hoursWorked) :
                new ObjectParameter("HoursWorked", typeof(string));
    
            var taskDateParameter = taskDate.HasValue ?
                new ObjectParameter("TaskDate", taskDate) :
                new ObjectParameter("TaskDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddSubmitTaskDetails", timesheetIDParameter, projectIDParameter, taskIDParameter, hoursWorkedParameter, taskDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AddSubmitTimesheetWeb(Nullable<int> userID, Nullable<System.DateTime> timesheetMonth, string comments, string submittedType, Nullable<bool> l1ApproverStatus, string l2ApproverStatus, Nullable<int> clientProjtId, ObjectParameter timesheetID, ObjectParameter trans_Output)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var timesheetMonthParameter = timesheetMonth.HasValue ?
                new ObjectParameter("TimesheetMonth", timesheetMonth) :
                new ObjectParameter("TimesheetMonth", typeof(System.DateTime));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var submittedTypeParameter = submittedType != null ?
                new ObjectParameter("SubmittedType", submittedType) :
                new ObjectParameter("SubmittedType", typeof(string));
    
            var l1ApproverStatusParameter = l1ApproverStatus.HasValue ?
                new ObjectParameter("L1ApproverStatus", l1ApproverStatus) :
                new ObjectParameter("L1ApproverStatus", typeof(bool));
    
            var l2ApproverStatusParameter = l2ApproverStatus != null ?
                new ObjectParameter("L2ApproverStatus", l2ApproverStatus) :
                new ObjectParameter("L2ApproverStatus", typeof(string));
    
            var clientProjtIdParameter = clientProjtId.HasValue ?
                new ObjectParameter("ClientProjtId", clientProjtId) :
                new ObjectParameter("ClientProjtId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AddSubmitTimesheetWeb", userIDParameter, timesheetMonthParameter, commentsParameter, submittedTypeParameter, l1ApproverStatusParameter, l2ApproverStatusParameter, clientProjtIdParameter, timesheetID, trans_Output);
        }
    
        public virtual int AddSubmitTimesheetWebByWeekly(Nullable<int> userID, Nullable<System.DateTime> timesheetMonth, string comments, string submittedType, Nullable<System.DateTime> byWeeklyStartDate, Nullable<System.DateTime> byWeeklyEndDate, Nullable<int> clientProjtId, ObjectParameter timesheetID, ObjectParameter trans_Output)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var timesheetMonthParameter = timesheetMonth.HasValue ?
                new ObjectParameter("TimesheetMonth", timesheetMonth) :
                new ObjectParameter("TimesheetMonth", typeof(System.DateTime));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var submittedTypeParameter = submittedType != null ?
                new ObjectParameter("SubmittedType", submittedType) :
                new ObjectParameter("SubmittedType", typeof(string));
    
            var byWeeklyStartDateParameter = byWeeklyStartDate.HasValue ?
                new ObjectParameter("ByWeeklyStartDate", byWeeklyStartDate) :
                new ObjectParameter("ByWeeklyStartDate", typeof(System.DateTime));
    
            var byWeeklyEndDateParameter = byWeeklyEndDate.HasValue ?
                new ObjectParameter("ByWeeklyEndDate", byWeeklyEndDate) :
                new ObjectParameter("ByWeeklyEndDate", typeof(System.DateTime));
    
            var clientProjtIdParameter = clientProjtId.HasValue ?
                new ObjectParameter("ClientProjtId", clientProjtId) :
                new ObjectParameter("ClientProjtId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddSubmitTimesheetWebByWeekly", userIDParameter, timesheetMonthParameter, commentsParameter, submittedTypeParameter, byWeeklyStartDateParameter, byWeeklyEndDateParameter, clientProjtIdParameter, timesheetID, trans_Output);
        }
    
        public virtual ObjectResult<AddTimesheet_Comments_Result> AddTimesheet_Comments(Nullable<int> timesheetID, Nullable<int> userID, string comments, Nullable<int> action, Nullable<int> managerid_L1)
        {
            var timesheetIDParameter = timesheetID.HasValue ?
                new ObjectParameter("TimesheetID", timesheetID) :
                new ObjectParameter("TimesheetID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("comments", comments) :
                new ObjectParameter("comments", typeof(string));
    
            var actionParameter = action.HasValue ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(int));
    
            var managerid_L1Parameter = managerid_L1.HasValue ?
                new ObjectParameter("managerid_L1", managerid_L1) :
                new ObjectParameter("managerid_L1", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddTimesheet_Comments_Result>("AddTimesheet_Comments", timesheetIDParameter, userIDParameter, commentsParameter, actionParameter, managerid_L1Parameter);
        }
    
        public virtual ObjectResult<Admin_WebGetTimeSheetforApproval_Result> Admin_WebGetTimeSheetforApproval(Nullable<int> companyAccountID, Nullable<int> timesheetProjectid, string year, string month)
        {
            var companyAccountIDParameter = companyAccountID.HasValue ?
                new ObjectParameter("companyAccountID", companyAccountID) :
                new ObjectParameter("companyAccountID", typeof(int));
    
            var timesheetProjectidParameter = timesheetProjectid.HasValue ?
                new ObjectParameter("TimesheetProjectid", timesheetProjectid) :
                new ObjectParameter("TimesheetProjectid", typeof(int));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_WebGetTimeSheetforApproval_Result>("Admin_WebGetTimeSheetforApproval", companyAccountIDParameter, timesheetProjectidParameter, yearParameter, monthParameter);
        }
    
        public virtual int AlexaCheckStatus(string deviceid, ObjectParameter status)
        {
            var deviceidParameter = deviceid != null ?
                new ObjectParameter("deviceid", deviceid) :
                new ObjectParameter("deviceid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AlexaCheckStatus", deviceidParameter, status);
        }
    
        public virtual ObjectResult<AlexaGetUserDetails_Result> AlexaGetUserDetails(string deviceid)
        {
            var deviceidParameter = deviceid != null ?
                new ObjectParameter("deviceid", deviceid) :
                new ObjectParameter("deviceid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AlexaGetUserDetails_Result>("AlexaGetUserDetails", deviceidParameter);
        }
    
        public virtual ObjectResult<AlexaGetUsers_Result> AlexaGetUsers(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AlexaGetUsers_Result>("AlexaGetUsers", useridParameter);
        }
    
        public virtual ObjectResult<string> AlexaGetWorkingHours(Nullable<int> month, string deviceid, string phnumber, ObjectParameter status)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var deviceidParameter = deviceid != null ?
                new ObjectParameter("deviceid", deviceid) :
                new ObjectParameter("deviceid", typeof(string));
    
            var phnumberParameter = phnumber != null ?
                new ObjectParameter("phnumber", phnumber) :
                new ObjectParameter("phnumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("AlexaGetWorkingHours", monthParameter, deviceidParameter, phnumberParameter, status);
        }
    
        public virtual ObjectResult<string> AlexaGetWorkingHoursDetails(Nullable<int> month, string deviceid)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var deviceidParameter = deviceid != null ?
                new ObjectParameter("deviceid", deviceid) :
                new ObjectParameter("deviceid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("AlexaGetWorkingHoursDetails", monthParameter, deviceidParameter);
        }
    
        public virtual int AlexaSubmitTimesheet(Nullable<int> month, string deviceid, string phnumber, ObjectParameter timesheetSubmitted)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var deviceidParameter = deviceid != null ?
                new ObjectParameter("deviceid", deviceid) :
                new ObjectParameter("deviceid", typeof(string));
    
            var phnumberParameter = phnumber != null ?
                new ObjectParameter("phnumber", phnumber) :
                new ObjectParameter("phnumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AlexaSubmitTimesheet", monthParameter, deviceidParameter, phnumberParameter, timesheetSubmitted);
        }
    
        public virtual int AlexaSubmitTimesheetdetails(Nullable<int> month, string deviceid, ObjectParameter timesheetSubmitted, ObjectParameter workinghours, ObjectParameter timesheetMonthDate)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var deviceidParameter = deviceid != null ?
                new ObjectParameter("deviceid", deviceid) :
                new ObjectParameter("deviceid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AlexaSubmitTimesheetdetails", monthParameter, deviceidParameter, timesheetSubmitted, workinghours, timesheetMonthDate);
        }
    
        public virtual int AlexaValidatePasscode(string deviceid, Nullable<int> passcode, ObjectParameter message)
        {
            var deviceidParameter = deviceid != null ?
                new ObjectParameter("deviceid", deviceid) :
                new ObjectParameter("deviceid", typeof(string));
    
            var passcodeParameter = passcode.HasValue ?
                new ObjectParameter("passcode", passcode) :
                new ObjectParameter("passcode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AlexaValidatePasscode", deviceidParameter, passcodeParameter, message);
        }
    
        public virtual int AlexavalidatePhone(string deviceid, string phnumber, ObjectParameter message)
        {
            var deviceidParameter = deviceid != null ?
                new ObjectParameter("deviceid", deviceid) :
                new ObjectParameter("deviceid", typeof(string));
    
            var phnumberParameter = phnumber != null ?
                new ObjectParameter("phnumber", phnumber) :
                new ObjectParameter("phnumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AlexavalidatePhone", deviceidParameter, phnumberParameter, message);
        }
    
        public virtual int AlexavalidatePin(string deviceid, Nullable<int> pin, ObjectParameter message)
        {
            var deviceidParameter = deviceid != null ?
                new ObjectParameter("deviceid", deviceid) :
                new ObjectParameter("deviceid", typeof(string));
    
            var pinParameter = pin.HasValue ?
                new ObjectParameter("pin", pin) :
                new ObjectParameter("pin", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AlexavalidatePin", deviceidParameter, pinParameter, message);
        }
    
        public virtual int AlexaValidateUser(string deviceid, string phnumber, ObjectParameter message)
        {
            var deviceidParameter = deviceid != null ?
                new ObjectParameter("deviceid", deviceid) :
                new ObjectParameter("deviceid", typeof(string));
    
            var phnumberParameter = phnumber != null ?
                new ObjectParameter("phnumber", phnumber) :
                new ObjectParameter("phnumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AlexaValidateUser", deviceidParameter, phnumberParameter, message);
        }
    
        public virtual ObjectResult<AlexaWakeUp_Result> AlexaWakeUp(string deviceid)
        {
            var deviceidParameter = deviceid != null ?
                new ObjectParameter("deviceid", deviceid) :
                new ObjectParameter("deviceid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AlexaWakeUp_Result>("AlexaWakeUp", deviceidParameter);
        }
    
        public virtual ObjectResult<AlexaWakeUpProc_Result> AlexaWakeUpProc(string deviceid)
        {
            var deviceidParameter = deviceid != null ?
                new ObjectParameter("deviceid", deviceid) :
                new ObjectParameter("deviceid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AlexaWakeUpProc_Result>("AlexaWakeUpProc", deviceidParameter);
        }
    
        public virtual ObjectResult<Assessmenttechnology_Result> Assessmenttechnology(Nullable<int> positionid)
        {
            var positionidParameter = positionid.HasValue ?
                new ObjectParameter("Positionid", positionid) :
                new ObjectParameter("Positionid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Assessmenttechnology_Result>("Assessmenttechnology", positionidParameter);
        }
    
        public virtual ObjectResult<Ax_GetManagerEmailIds_Result> Ax_GetManagerEmailIds(string deviceid)
        {
            var deviceidParameter = deviceid != null ?
                new ObjectParameter("deviceid", deviceid) :
                new ObjectParameter("deviceid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ax_GetManagerEmailIds_Result>("Ax_GetManagerEmailIds", deviceidParameter);
        }
    
        public virtual ObjectResult<Ax_getTimeSheetEmailDetails_Result> Ax_getTimeSheetEmailDetails(string deviceid, Nullable<System.DateTime> timesheetmonth)
        {
            var deviceidParameter = deviceid != null ?
                new ObjectParameter("deviceid", deviceid) :
                new ObjectParameter("deviceid", typeof(string));
    
            var timesheetmonthParameter = timesheetmonth.HasValue ?
                new ObjectParameter("Timesheetmonth", timesheetmonth) :
                new ObjectParameter("Timesheetmonth", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ax_getTimeSheetEmailDetails_Result>("Ax_getTimeSheetEmailDetails", deviceidParameter, timesheetmonthParameter);
        }
    
        public virtual ObjectResult<AX_GetUsersTimeSheetDetails_Result> AX_GetUsersTimeSheetDetails(string userid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> endDate)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AX_GetUsersTimeSheetDetails_Result>("AX_GetUsersTimeSheetDetails", useridParameter, fromdateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<ByMonthly_WebGetTimeSheetforApproval_Result> ByMonthly_WebGetTimeSheetforApproval(string userid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ByMonthly_WebGetTimeSheetforApproval_Result>("ByMonthly_WebGetTimeSheetforApproval", useridParameter);
        }
    
        public virtual ObjectResult<ByMonthly_WebGetTimeSheetforApproval15day_Result> ByMonthly_WebGetTimeSheetforApproval15day(string userid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ByMonthly_WebGetTimeSheetforApproval15day_Result>("ByMonthly_WebGetTimeSheetforApproval15day", useridParameter);
        }
    
        public virtual ObjectResult<ByWeeklygetTimeSheetEmailDetails_Result> ByWeeklygetTimeSheetEmailDetails(string userid, Nullable<System.DateTime> timesheetmonth, Nullable<int> clientPrjId)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var timesheetmonthParameter = timesheetmonth.HasValue ?
                new ObjectParameter("Timesheetmonth", timesheetmonth) :
                new ObjectParameter("Timesheetmonth", typeof(System.DateTime));
    
            var clientPrjIdParameter = clientPrjId.HasValue ?
                new ObjectParameter("clientPrjId", clientPrjId) :
                new ObjectParameter("clientPrjId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ByWeeklygetTimeSheetEmailDetails_Result>("ByWeeklygetTimeSheetEmailDetails", useridParameter, timesheetmonthParameter, clientPrjIdParameter);
        }
    
        public virtual int ByWeeklyWebValidTimesheetMonthExits(Nullable<int> userID, Nullable<System.DateTime> weekstartdate, Nullable<System.DateTime> weekenddate, ObjectParameter trans_Output)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var weekstartdateParameter = weekstartdate.HasValue ?
                new ObjectParameter("Weekstartdate", weekstartdate) :
                new ObjectParameter("Weekstartdate", typeof(System.DateTime));
    
            var weekenddateParameter = weekenddate.HasValue ?
                new ObjectParameter("Weekenddate", weekenddate) :
                new ObjectParameter("Weekenddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ByWeeklyWebValidTimesheetMonthExits", userIDParameter, weekstartdateParameter, weekenddateParameter, trans_Output);
        }
    
        public virtual int ChangeOrUpdatePasswd(string userLoginId, string oldPassword, string newPassword, ObjectParameter flag)
        {
            var userLoginIdParameter = userLoginId != null ?
                new ObjectParameter("UserLoginId", userLoginId) :
                new ObjectParameter("UserLoginId", typeof(string));
    
            var oldPasswordParameter = oldPassword != null ?
                new ObjectParameter("OldPassword", oldPassword) :
                new ObjectParameter("OldPassword", typeof(string));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangeOrUpdatePasswd", userLoginIdParameter, oldPasswordParameter, newPasswordParameter, flag);
        }
    
        public virtual ObjectResult<CheckTimesheettypebyUserId_Result> CheckTimesheettypebyUserId(string userid, Nullable<System.DateTime> timesheetsdate)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var timesheetsdateParameter = timesheetsdate.HasValue ?
                new ObjectParameter("timesheetsdate", timesheetsdate) :
                new ObjectParameter("timesheetsdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckTimesheettypebyUserId_Result>("CheckTimesheettypebyUserId", useridParameter, timesheetsdateParameter);
        }
    
        public virtual int CreateDefaultRoles(string accountID)
        {
            var accountIDParameter = accountID != null ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateDefaultRoles", accountIDParameter);
        }
    
        public virtual int EditSubmitTaskDetails(Nullable<int> timesheetID, Nullable<int> projectID, Nullable<int> taskId, string hoursWorked, Nullable<System.DateTime> taskDate, ObjectParameter trans_Output)
        {
            var timesheetIDParameter = timesheetID.HasValue ?
                new ObjectParameter("TimesheetID", timesheetID) :
                new ObjectParameter("TimesheetID", typeof(int));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var taskIdParameter = taskId.HasValue ?
                new ObjectParameter("TaskId", taskId) :
                new ObjectParameter("TaskId", typeof(int));
    
            var hoursWorkedParameter = hoursWorked != null ?
                new ObjectParameter("HoursWorked", hoursWorked) :
                new ObjectParameter("HoursWorked", typeof(string));
    
            var taskDateParameter = taskDate.HasValue ?
                new ObjectParameter("TaskDate", taskDate) :
                new ObjectParameter("TaskDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditSubmitTaskDetails", timesheetIDParameter, projectIDParameter, taskIdParameter, hoursWorkedParameter, taskDateParameter, trans_Output);
        }
    
        public virtual int EditSubmitTimesheet(Nullable<int> timesheetID, Nullable<int> userID, string comments, string submittedType, ObjectParameter trans_Output)
        {
            var timesheetIDParameter = timesheetID.HasValue ?
                new ObjectParameter("TimesheetID", timesheetID) :
                new ObjectParameter("TimesheetID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var submittedTypeParameter = submittedType != null ?
                new ObjectParameter("SubmittedType", submittedType) :
                new ObjectParameter("SubmittedType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditSubmitTimesheet", timesheetIDParameter, userIDParameter, commentsParameter, submittedTypeParameter, trans_Output);
        }
    
        public virtual int EditWeeklySubmitTaskDetails(Nullable<int> timesheetID, Nullable<int> accTaskID, string hoursWorked, Nullable<System.DateTime> taskDate, Nullable<int> projectID, Nullable<int> proj_SpecificTaskId, ObjectParameter trans_Output)
        {
            var timesheetIDParameter = timesheetID.HasValue ?
                new ObjectParameter("TimesheetID", timesheetID) :
                new ObjectParameter("TimesheetID", typeof(int));
    
            var accTaskIDParameter = accTaskID.HasValue ?
                new ObjectParameter("AccTaskID", accTaskID) :
                new ObjectParameter("AccTaskID", typeof(int));
    
            var hoursWorkedParameter = hoursWorked != null ?
                new ObjectParameter("HoursWorked", hoursWorked) :
                new ObjectParameter("HoursWorked", typeof(string));
    
            var taskDateParameter = taskDate.HasValue ?
                new ObjectParameter("TaskDate", taskDate) :
                new ObjectParameter("TaskDate", typeof(System.DateTime));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var proj_SpecificTaskIdParameter = proj_SpecificTaskId.HasValue ?
                new ObjectParameter("Proj_SpecificTaskId", proj_SpecificTaskId) :
                new ObjectParameter("Proj_SpecificTaskId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditWeeklySubmitTaskDetails", timesheetIDParameter, accTaskIDParameter, hoursWorkedParameter, taskDateParameter, projectIDParameter, proj_SpecificTaskIdParameter, trans_Output);
        }
    
        public virtual ObjectResult<Get_ApprovedLeavesForUS_Result> Get_ApprovedLeavesForUS(Nullable<int> projId)
        {
            var projIdParameter = projId.HasValue ?
                new ObjectParameter("projId", projId) :
                new ObjectParameter("projId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_ApprovedLeavesForUS_Result>("Get_ApprovedLeavesForUS", projIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GET_ClientProjectId_Basedon_TimesheetId(Nullable<int> timeSheet)
        {
            var timeSheetParameter = timeSheet.HasValue ?
                new ObjectParameter("TimeSheet", timeSheet) :
                new ObjectParameter("TimeSheet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GET_ClientProjectId_Basedon_TimesheetId", timeSheetParameter);
        }
    
        public virtual ObjectResult<Get_EmailsByProjectId_Result> Get_EmailsByProjectId(Nullable<int> projectId)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_EmailsByProjectId_Result>("Get_EmailsByProjectId", projectIdParameter);
        }
    
        public virtual ObjectResult<Get_LeavesCount_Result> Get_LeavesCount(Nullable<int> userId, string dateOfMonth)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var dateOfMonthParameter = dateOfMonth != null ?
                new ObjectParameter("DateOfMonth", dateOfMonth) :
                new ObjectParameter("DateOfMonth", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_LeavesCount_Result>("Get_LeavesCount", userIdParameter, dateOfMonthParameter);
        }
    
        public virtual ObjectResult<Get_ManagerEmailDetails_Result> Get_ManagerEmailDetails(Nullable<int> userId, Nullable<int> cL_ProjectId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var cL_ProjectIdParameter = cL_ProjectId.HasValue ?
                new ObjectParameter("CL_ProjectId", cL_ProjectId) :
                new ObjectParameter("CL_ProjectId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_ManagerEmailDetails_Result>("Get_ManagerEmailDetails", userIdParameter, cL_ProjectIdParameter);
        }
    
        public virtual ObjectResult<Get_Managers_Result> Get_Managers(Nullable<int> accountID, Nullable<int> roleId)
        {
            var accountIDParameter = accountID.HasValue ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Managers_Result>("Get_Managers", accountIDParameter, roleIdParameter);
        }
    
        public virtual ObjectResult<Get_UserLeaves_Result> Get_UserLeaves(Nullable<int> userId, string monthYear)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var monthYearParameter = monthYear != null ?
                new ObjectParameter("MonthYear", monthYear) :
                new ObjectParameter("MonthYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_UserLeaves_Result>("Get_UserLeaves", userIdParameter, monthYearParameter);
        }
    
        public virtual ObjectResult<Get_UserLeavesCount_Result> Get_UserLeavesCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_UserLeavesCount_Result>("Get_UserLeavesCount");
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> Get_UserLeavesforTimesheet(Nullable<int> userId, string monthYear)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var monthYearParameter = monthYear != null ?
                new ObjectParameter("MonthYear", monthYear) :
                new ObjectParameter("MonthYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("Get_UserLeavesforTimesheet", userIdParameter, monthYearParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> Get_UserOptionalLeavesforTimesheet(Nullable<int> userId, string monthYear)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var monthYearParameter = monthYear != null ?
                new ObjectParameter("MonthYear", monthYear) :
                new ObjectParameter("MonthYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("Get_UserOptionalLeavesforTimesheet", userIdParameter, monthYearParameter);
        }
    
        public virtual ObjectResult<Get_UserWorkFromHome_Result> Get_UserWorkFromHome()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_UserWorkFromHome_Result>("Get_UserWorkFromHome");
        }
    
        public virtual ObjectResult<Get_USUserLeavesforApproval_Result> Get_USUserLeavesforApproval(Nullable<int> id, Nullable<System.DateTime> month_year, Nullable<int> projid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var month_yearParameter = month_year.HasValue ?
                new ObjectParameter("month_year", month_year) :
                new ObjectParameter("month_year", typeof(System.DateTime));
    
            var projidParameter = projid.HasValue ?
                new ObjectParameter("projid", projid) :
                new ObjectParameter("projid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_USUserLeavesforApproval_Result>("Get_USUserLeavesforApproval", idParameter, month_yearParameter, projidParameter);
        }
    
        public virtual ObjectResult<Get_USUserWFHforApproval_Result> Get_USUserWFHforApproval(Nullable<int> id, Nullable<System.DateTime> month_year, Nullable<int> projid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var month_yearParameter = month_year.HasValue ?
                new ObjectParameter("month_year", month_year) :
                new ObjectParameter("month_year", typeof(System.DateTime));
    
            var projidParameter = projid.HasValue ?
                new ObjectParameter("projid", projid) :
                new ObjectParameter("projid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_USUserWFHforApproval_Result>("Get_USUserWFHforApproval", idParameter, month_yearParameter, projidParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> Get_WorkfromHomeTimesheet(Nullable<int> userId, Nullable<System.DateTime> monthYear)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var monthYearParameter = monthYear.HasValue ?
                new ObjectParameter("MonthYear", monthYear) :
                new ObjectParameter("MonthYear", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("Get_WorkfromHomeTimesheet", userIdParameter, monthYearParameter);
        }
    
        public virtual ObjectResult<GETALL_USERSTIMESHEETS_WEB_Result> GETALL_USERSTIMESHEETS_WEB(string userid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GETALL_USERSTIMESHEETS_WEB_Result>("GETALL_USERSTIMESHEETS_WEB", useridParameter);
        }
    
        public virtual ObjectResult<GetAllCalendarDates_Result> GetAllCalendarDates(Nullable<int> month, string year)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCalendarDates_Result>("GetAllCalendarDates", monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<GetallQuestions_Result> GetallQuestions(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetallQuestions_Result>("GetallQuestions", userIdParameter);
        }
    
        public virtual ObjectResult<GETALLTickets_Result> GETALLTickets(Nullable<int> userid, Nullable<int> depid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var depidParameter = depid.HasValue ?
                new ObjectParameter("Depid", depid) :
                new ObjectParameter("Depid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GETALLTickets_Result>("GETALLTickets", useridParameter, depidParameter);
        }
    
        public virtual ObjectResult<getAssignedUsersList_Result> getAssignedUsersList(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getAssignedUsersList_Result>("getAssignedUsersList", useridParameter);
        }
    
        public virtual ObjectResult<GetClientsByAccountId_Result> GetClientsByAccountId(string accountId)
        {
            var accountIdParameter = accountId != null ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClientsByAccountId_Result>("GetClientsByAccountId", accountIdParameter);
        }
    
        public virtual ObjectResult<GetDashBoardTimesheet_Result> GetDashBoardTimesheet(string userid, Nullable<int> startPosition, Nullable<int> endPosition)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var startPositionParameter = startPosition.HasValue ?
                new ObjectParameter("StartPosition", startPosition) :
                new ObjectParameter("StartPosition", typeof(int));
    
            var endPositionParameter = endPosition.HasValue ?
                new ObjectParameter("EndPosition", endPosition) :
                new ObjectParameter("EndPosition", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDashBoardTimesheet_Result>("GetDashBoardTimesheet", useridParameter, startPositionParameter, endPositionParameter);
        }
    
        public virtual ObjectResult<GetDatesofByWeekly_Result> GetDatesofByWeekly(string userid, Nullable<System.DateTime> timesheetsdate)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var timesheetsdateParameter = timesheetsdate.HasValue ?
                new ObjectParameter("timesheetsdate", timesheetsdate) :
                new ObjectParameter("timesheetsdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDatesofByWeekly_Result>("GetDatesofByWeekly", useridParameter, timesheetsdateParameter);
        }
    
        public virtual ObjectResult<GetDatesofByWeekly15days_Result> GetDatesofByWeekly15days()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDatesofByWeekly15days_Result>("GetDatesofByWeekly15days");
        }
    
        public virtual ObjectResult<GetDatesofByWeeklyTesting_Result> GetDatesofByWeeklyTesting()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDatesofByWeeklyTesting_Result>("GetDatesofByWeeklyTesting");
        }
    
        public virtual ObjectResult<GetDatesofWeekly_Result> GetDatesofWeekly(Nullable<System.DateTime> timesheetsdate)
        {
            var timesheetsdateParameter = timesheetsdate.HasValue ?
                new ObjectParameter("timesheetsdate", timesheetsdate) :
                new ObjectParameter("timesheetsdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDatesofWeekly_Result>("GetDatesofWeekly", timesheetsdateParameter);
        }
    
        public virtual ObjectResult<GetDatesofWeeklyTesting_Result> GetDatesofWeeklyTesting()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDatesofWeeklyTesting_Result>("GetDatesofWeeklyTesting");
        }
    
        public virtual int GetEmployeesByProjectId(Nullable<int> projectId, Nullable<int> cL_ProjId, Nullable<int> accountId)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            var cL_ProjIdParameter = cL_ProjId.HasValue ?
                new ObjectParameter("CL_ProjId", cL_ProjId) :
                new ObjectParameter("CL_ProjId", typeof(int));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetEmployeesByProjectId", projectIdParameter, cL_ProjIdParameter, accountIdParameter);
        }
    
        public virtual ObjectResult<getEMployeesforClientProjectid_Result> getEMployeesforClientProjectid(Nullable<int> projectID, Nullable<int> accountID, Nullable<int> clientProjId)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var accountIDParameter = accountID.HasValue ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(int));
    
            var clientProjIdParameter = clientProjId.HasValue ?
                new ObjectParameter("ClientProjId", clientProjId) :
                new ObjectParameter("ClientProjId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getEMployeesforClientProjectid_Result>("getEMployeesforClientProjectid", projectIDParameter, accountIDParameter, clientProjIdParameter);
        }
    
        public virtual ObjectResult<GetLeaveCategoreries_Result> GetLeaveCategoreries(string userid, Nullable<System.DateTime> year)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLeaveCategoreries_Result>("GetLeaveCategoreries", useridParameter, yearParameter);
        }
    
        public virtual ObjectResult<GetManagerEmailIds_Result> GetManagerEmailIds(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetManagerEmailIds_Result>("GetManagerEmailIds", userIDParameter);
        }
    
        public virtual ObjectResult<GetManagerEmailIdsTesting_Result> GetManagerEmailIdsTesting(Nullable<int> userID, Nullable<int> clientId)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetManagerEmailIdsTesting_Result>("GetManagerEmailIdsTesting", userIDParameter, clientIdParameter);
        }
    
        public virtual int GetManagersByProjectId(Nullable<int> projectId, Nullable<int> cL_ProjId, Nullable<int> accountId)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            var cL_ProjIdParameter = cL_ProjId.HasValue ?
                new ObjectParameter("CL_ProjId", cL_ProjId) :
                new ObjectParameter("CL_ProjId", typeof(int));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetManagersByProjectId", projectIdParameter, cL_ProjIdParameter, accountIdParameter);
        }
    
        public virtual ObjectResult<GetProfileDetails_Result> GetProfileDetails(string userid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProfileDetails_Result>("GetProfileDetails", useridParameter);
        }
    
        public virtual ObjectResult<GetProjectsByUserID_Result> GetProjectsByUserID(string userid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProjectsByUserID_Result>("GetProjectsByUserID", useridParameter);
        }
    
        public virtual ObjectResult<GetTempTimesheetLeavesandHolidays_Result> GetTempTimesheetLeavesandHolidays(Nullable<System.DateTime> timesheetMonth, Nullable<int> userid, Nullable<int> accountid, string projectid, Nullable<int> clientprojID)
        {
            var timesheetMonthParameter = timesheetMonth.HasValue ?
                new ObjectParameter("timesheetMonth", timesheetMonth) :
                new ObjectParameter("timesheetMonth", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var accountidParameter = accountid.HasValue ?
                new ObjectParameter("Accountid", accountid) :
                new ObjectParameter("Accountid", typeof(int));
    
            var projectidParameter = projectid != null ?
                new ObjectParameter("Projectid", projectid) :
                new ObjectParameter("Projectid", typeof(string));
    
            var clientprojIDParameter = clientprojID.HasValue ?
                new ObjectParameter("ClientprojID", clientprojID) :
                new ObjectParameter("ClientprojID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTempTimesheetLeavesandHolidays_Result>("GetTempTimesheetLeavesandHolidays", timesheetMonthParameter, useridParameter, accountidParameter, projectidParameter, clientprojIDParameter);
        }
    
        public virtual ObjectResult<GetTicketsByID_Result> GetTicketsByID(Nullable<int> ticketid)
        {
            var ticketidParameter = ticketid.HasValue ?
                new ObjectParameter("Ticketid", ticketid) :
                new ObjectParameter("Ticketid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTicketsByID_Result>("GetTicketsByID", ticketidParameter);
        }
    
        public virtual ObjectResult<GetTimeSheetDetailsOfUser_Result> GetTimeSheetDetailsOfUser(string userid, Nullable<System.DateTime> timesheetmonth, Nullable<int> accountid, string projectid, Nullable<int> clientid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var timesheetmonthParameter = timesheetmonth.HasValue ?
                new ObjectParameter("Timesheetmonth", timesheetmonth) :
                new ObjectParameter("Timesheetmonth", typeof(System.DateTime));
    
            var accountidParameter = accountid.HasValue ?
                new ObjectParameter("Accountid", accountid) :
                new ObjectParameter("Accountid", typeof(int));
    
            var projectidParameter = projectid != null ?
                new ObjectParameter("Projectid", projectid) :
                new ObjectParameter("Projectid", typeof(string));
    
            var clientidParameter = clientid.HasValue ?
                new ObjectParameter("clientid", clientid) :
                new ObjectParameter("clientid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTimeSheetDetailsOfUser_Result>("GetTimeSheetDetailsOfUser", useridParameter, timesheetmonthParameter, accountidParameter, projectidParameter, clientidParameter);
        }
    
        public virtual ObjectResult<getTimeSheetEmailDetails_Result> getTimeSheetEmailDetails(string userid, Nullable<System.DateTime> timesheetmonth, Nullable<int> clientPrjId)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var timesheetmonthParameter = timesheetmonth.HasValue ?
                new ObjectParameter("Timesheetmonth", timesheetmonth) :
                new ObjectParameter("Timesheetmonth", typeof(System.DateTime));
    
            var clientPrjIdParameter = clientPrjId.HasValue ?
                new ObjectParameter("clientPrjId", clientPrjId) :
                new ObjectParameter("clientPrjId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getTimeSheetEmailDetails_Result>("getTimeSheetEmailDetails", useridParameter, timesheetmonthParameter, clientPrjIdParameter);
        }
    
        public virtual ObjectResult<GetTimeSheetforApproval_Result> GetTimeSheetforApproval(string userid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTimeSheetforApproval_Result>("GetTimeSheetforApproval", useridParameter);
        }
    
        public virtual ObjectResult<GetTimeSheetforApprovalTesting_Result> GetTimeSheetforApprovalTesting(string userid, Nullable<int> startPosition, Nullable<int> endPosition)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var startPositionParameter = startPosition.HasValue ?
                new ObjectParameter("StartPosition", startPosition) :
                new ObjectParameter("StartPosition", typeof(int));
    
            var endPositionParameter = endPosition.HasValue ?
                new ObjectParameter("EndPosition", endPosition) :
                new ObjectParameter("EndPosition", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTimeSheetforApprovalTesting_Result>("GetTimeSheetforApprovalTesting", useridParameter, startPositionParameter, endPositionParameter);
        }
    
        public virtual ObjectResult<GetTotalOptionalHolidays_Result> GetTotalOptionalHolidays(Nullable<int> cL_ProjectId)
        {
            var cL_ProjectIdParameter = cL_ProjectId.HasValue ?
                new ObjectParameter("CL_ProjectId", cL_ProjectId) :
                new ObjectParameter("CL_ProjectId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTotalOptionalHolidays_Result>("GetTotalOptionalHolidays", cL_ProjectIdParameter);
        }
    
        public virtual ObjectResult<GetUserHolidayCalender_Result> GetUserHolidayCalender(string userID, string userAccontID, string holidaySelectionDate)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var userAccontIDParameter = userAccontID != null ?
                new ObjectParameter("UserAccontID", userAccontID) :
                new ObjectParameter("UserAccontID", typeof(string));
    
            var holidaySelectionDateParameter = holidaySelectionDate != null ?
                new ObjectParameter("HolidaySelectionDate", holidaySelectionDate) :
                new ObjectParameter("HolidaySelectionDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserHolidayCalender_Result>("GetUserHolidayCalender", userIDParameter, userAccontIDParameter, holidaySelectionDateParameter);
        }
    
        public virtual ObjectResult<GetUserLeavesforApproval_Result> GetUserLeavesforApproval(string userid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserLeavesforApproval_Result>("GetUserLeavesforApproval", useridParameter);
        }
    
        public virtual ObjectResult<GetUserLeavesforApprovalForUS_Result> GetUserLeavesforApprovalForUS(string userid, string dateOfMonth)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var dateOfMonthParameter = dateOfMonth != null ?
                new ObjectParameter("DateOfMonth", dateOfMonth) :
                new ObjectParameter("DateOfMonth", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserLeavesforApprovalForUS_Result>("GetUserLeavesforApprovalForUS", useridParameter, dateOfMonthParameter);
        }
    
        public virtual int GetUsersDatabyLogin(string userid, string password)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetUsersDatabyLogin", useridParameter, passwordParameter);
        }
    
        public virtual ObjectResult<getUserTimesheet_Result> getUserTimesheet(string userid, Nullable<System.DateTime> timesheetmonth)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var timesheetmonthParameter = timesheetmonth.HasValue ?
                new ObjectParameter("Timesheetmonth", timesheetmonth) :
                new ObjectParameter("Timesheetmonth", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getUserTimesheet_Result>("getUserTimesheet", useridParameter, timesheetmonthParameter);
        }
    
        public virtual ObjectResult<GetUserTimeSheetList_Result> GetUserTimeSheetList(string userid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> endDate)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserTimeSheetList_Result>("GetUserTimeSheetList", useridParameter, fromdateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetUserWorkFrmHomeApproval_Result> GetUserWorkFrmHomeApproval(string userid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserWorkFrmHomeApproval_Result>("GetUserWorkFrmHomeApproval", useridParameter);
        }
    
        public virtual ObjectResult<GetUserWorkFrmHomeApprovalForUS_Result> GetUserWorkFrmHomeApprovalForUS(string userid, string dateOfMonth)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var dateOfMonthParameter = dateOfMonth != null ?
                new ObjectParameter("DateOfMonth", dateOfMonth) :
                new ObjectParameter("DateOfMonth", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserWorkFrmHomeApprovalForUS_Result>("GetUserWorkFrmHomeApprovalForUS", useridParameter, dateOfMonthParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GgetProjectIdByTimeshhet(Nullable<int> timesheetID)
        {
            var timesheetIDParameter = timesheetID.HasValue ?
                new ObjectParameter("TimesheetID", timesheetID) :
                new ObjectParameter("TimesheetID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GgetProjectIdByTimeshhet", timesheetIDParameter);
        }
    
        public virtual ObjectResult<Insert_AccountSpecificTasks_Result> Insert_AccountSpecificTasks(Nullable<int> accountID)
        {
            var accountIDParameter = accountID.HasValue ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Insert_AccountSpecificTasks_Result>("Insert_AccountSpecificTasks", accountIDParameter);
        }
    
        public virtual int Insert_UserLeaves(Nullable<int> userID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string comments, ObjectParameter message)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_UserLeaves", userIDParameter, startDateParameter, endDateParameter, commentsParameter, message);
        }
    
        public virtual ObjectResult<Nullable<int>> Insert_UserLeavesConsumed(Nullable<int> userLeaveId, Nullable<int> no_Of_Days, Nullable<int> leaveTypeID)
        {
            var userLeaveIdParameter = userLeaveId.HasValue ?
                new ObjectParameter("UserLeaveId", userLeaveId) :
                new ObjectParameter("UserLeaveId", typeof(int));
    
            var no_Of_DaysParameter = no_Of_Days.HasValue ?
                new ObjectParameter("No_Of_Days", no_Of_Days) :
                new ObjectParameter("No_Of_Days", typeof(int));
    
            var leaveTypeIDParameter = leaveTypeID.HasValue ?
                new ObjectParameter("LeaveTypeID", leaveTypeID) :
                new ObjectParameter("LeaveTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Insert_UserLeavesConsumed", userLeaveIdParameter, no_Of_DaysParameter, leaveTypeIDParameter);
        }
    
        public virtual int Insert_UserWorkFromHome(Nullable<int> usrl_UserId, Nullable<System.DateTime> userwfhStartDate, Nullable<System.DateTime> userwfhEndDate, string comments, Nullable<System.DateTime> createdDate, Nullable<bool> is_WorkFromHome)
        {
            var usrl_UserIdParameter = usrl_UserId.HasValue ?
                new ObjectParameter("Usrl_UserId", usrl_UserId) :
                new ObjectParameter("Usrl_UserId", typeof(int));
    
            var userwfhStartDateParameter = userwfhStartDate.HasValue ?
                new ObjectParameter("UserwfhStartDate", userwfhStartDate) :
                new ObjectParameter("UserwfhStartDate", typeof(System.DateTime));
    
            var userwfhEndDateParameter = userwfhEndDate.HasValue ?
                new ObjectParameter("UserwfhEndDate", userwfhEndDate) :
                new ObjectParameter("UserwfhEndDate", typeof(System.DateTime));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var is_WorkFromHomeParameter = is_WorkFromHome.HasValue ?
                new ObjectParameter("Is_WorkFromHome", is_WorkFromHome) :
                new ObjectParameter("Is_WorkFromHome", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_UserWorkFromHome", usrl_UserIdParameter, userwfhStartDateParameter, userwfhEndDateParameter, commentsParameter, createdDateParameter, is_WorkFromHomeParameter);
        }
    
        public virtual int INSERTUPDATEAssessment_For_Position(string interviewForPositionname, string description, Nullable<int> createdBy, ObjectParameter id)
        {
            var interviewForPositionnameParameter = interviewForPositionname != null ?
                new ObjectParameter("InterviewForPositionname", interviewForPositionname) :
                new ObjectParameter("InterviewForPositionname", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERTUPDATEAssessment_For_Position", interviewForPositionnameParameter, descriptionParameter, createdByParameter, id);
        }
    
        public virtual int InsertUserLeaves(Nullable<int> userId, Nullable<System.DateTime> leaveStartDate, Nullable<System.DateTime> leaveEndDate, string comments, ObjectParameter userLeaveId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var leaveStartDateParameter = leaveStartDate.HasValue ?
                new ObjectParameter("LeaveStartDate", leaveStartDate) :
                new ObjectParameter("LeaveStartDate", typeof(System.DateTime));
    
            var leaveEndDateParameter = leaveEndDate.HasValue ?
                new ObjectParameter("LeaveEndDate", leaveEndDate) :
                new ObjectParameter("LeaveEndDate", typeof(System.DateTime));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertUserLeaves", userIdParameter, leaveStartDateParameter, leaveEndDateParameter, commentsParameter, userLeaveId);
        }
    
        public virtual int LoadTimesheetsforManagerAprroval(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LoadTimesheetsforManagerAprroval", useridParameter);
        }
    
        public virtual ObjectResult<LoginByUsernamePassword_Result> LoginByUsernamePassword(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoginByUsernamePassword_Result>("LoginByUsernamePassword", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<MailsAppOrRejStatus_Result> MailsAppOrRejStatus(string timesheetID)
        {
            var timesheetIDParameter = timesheetID != null ?
                new ObjectParameter("TimesheetID", timesheetID) :
                new ObjectParameter("TimesheetID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MailsAppOrRejStatus_Result>("MailsAppOrRejStatus", timesheetIDParameter);
        }
    
        public virtual int ManagerActionsfromEmail(Nullable<int> userid, Nullable<int> timesheetID, Nullable<int> projectid, Nullable<int> managerId, string comments, Nullable<int> clientprojID, string submittedType, ObjectParameter trans_Output)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var timesheetIDParameter = timesheetID.HasValue ?
                new ObjectParameter("TimesheetID", timesheetID) :
                new ObjectParameter("TimesheetID", typeof(int));
    
            var projectidParameter = projectid.HasValue ?
                new ObjectParameter("Projectid", projectid) :
                new ObjectParameter("Projectid", typeof(int));
    
            var managerIdParameter = managerId.HasValue ?
                new ObjectParameter("ManagerId", managerId) :
                new ObjectParameter("ManagerId", typeof(int));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var clientprojIDParameter = clientprojID.HasValue ?
                new ObjectParameter("ClientprojID", clientprojID) :
                new ObjectParameter("ClientprojID", typeof(int));
    
            var submittedTypeParameter = submittedType != null ?
                new ObjectParameter("SubmittedType", submittedType) :
                new ObjectParameter("SubmittedType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ManagerActionsfromEmail", useridParameter, timesheetIDParameter, projectidParameter, managerIdParameter, commentsParameter, clientprojIDParameter, submittedTypeParameter, trans_Output);
        }
    
        public virtual ObjectResult<Sp_GetHolidays_Result> Sp_GetHolidays(Nullable<int> accountID, Nullable<int> cL_ProjectID)
        {
            var accountIDParameter = accountID.HasValue ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(int));
    
            var cL_ProjectIDParameter = cL_ProjectID.HasValue ?
                new ObjectParameter("CL_ProjectID", cL_ProjectID) :
                new ObjectParameter("CL_ProjectID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetHolidays_Result>("Sp_GetHolidays", accountIDParameter, cL_ProjectIDParameter);
        }
    
        public virtual ObjectResult<sp_GetLeaveTypes_Result> sp_GetLeaveTypes(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetLeaveTypes_Result>("sp_GetLeaveTypes", userIdParameter);
        }
    
        public virtual ObjectResult<Sp_GetProjects_Result> Sp_GetProjects()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetProjects_Result>("Sp_GetProjects");
        }
    
        public virtual ObjectResult<Sp_GetProjSpecificTasks_Result> Sp_GetProjSpecificTasks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetProjSpecificTasks_Result>("Sp_GetProjSpecificTasks");
        }
    
        public virtual ObjectResult<Sp_GetTasks_Result> Sp_GetTasks(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetTasks_Result>("Sp_GetTasks", useridParameter);
        }
    
        public virtual ObjectResult<string> sp_month_dates(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_month_dates", dateParameter);
        }
    
        public virtual ObjectResult<string> Sp_WeeklyDaysandDates(Nullable<int> userid, Nullable<System.DateTime> dateofMonth)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var dateofMonthParameter = dateofMonth.HasValue ?
                new ObjectParameter("DateofMonth", dateofMonth) :
                new ObjectParameter("DateofMonth", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_WeeklyDaysandDates", useridParameter, dateofMonthParameter);
        }
    
        public virtual ObjectResult<SpecificUser_Result> SpecificUser(Nullable<int> projectID, Nullable<int> accountID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var accountIDParameter = accountID.HasValue ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpecificUser_Result>("SpecificUser", projectIDParameter, accountIDParameter);
        }
    
        public virtual ObjectResult<TempAddByWeeklyTimesheet_Result> TempAddByWeeklyTimesheet(Nullable<System.DateTime> timesheetMonthstart, Nullable<System.DateTime> timesheetMonthEnd, Nullable<int> userid, Nullable<int> accountid, string projectid, Nullable<int> clientprojID)
        {
            var timesheetMonthstartParameter = timesheetMonthstart.HasValue ?
                new ObjectParameter("timesheetMonthstart", timesheetMonthstart) :
                new ObjectParameter("timesheetMonthstart", typeof(System.DateTime));
    
            var timesheetMonthEndParameter = timesheetMonthEnd.HasValue ?
                new ObjectParameter("timesheetMonthEnd", timesheetMonthEnd) :
                new ObjectParameter("timesheetMonthEnd", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var accountidParameter = accountid.HasValue ?
                new ObjectParameter("Accountid", accountid) :
                new ObjectParameter("Accountid", typeof(int));
    
            var projectidParameter = projectid != null ?
                new ObjectParameter("Projectid", projectid) :
                new ObjectParameter("Projectid", typeof(string));
    
            var clientprojIDParameter = clientprojID.HasValue ?
                new ObjectParameter("ClientprojID", clientprojID) :
                new ObjectParameter("ClientprojID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TempAddByWeeklyTimesheet_Result>("TempAddByWeeklyTimesheet", timesheetMonthstartParameter, timesheetMonthEndParameter, useridParameter, accountidParameter, projectidParameter, clientprojIDParameter);
        }
    
        public virtual ObjectResult<TempSubmitTimesheet_Result> TempSubmitTimesheet(Nullable<System.DateTime> timesheetMonth, Nullable<int> userid, Nullable<int> accountid, string projectid, Nullable<int> clientid)
        {
            var timesheetMonthParameter = timesheetMonth.HasValue ?
                new ObjectParameter("timesheetMonth", timesheetMonth) :
                new ObjectParameter("timesheetMonth", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var accountidParameter = accountid.HasValue ?
                new ObjectParameter("Accountid", accountid) :
                new ObjectParameter("Accountid", typeof(int));
    
            var projectidParameter = projectid != null ?
                new ObjectParameter("Projectid", projectid) :
                new ObjectParameter("Projectid", typeof(string));
    
            var clientidParameter = clientid.HasValue ?
                new ObjectParameter("clientid", clientid) :
                new ObjectParameter("clientid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TempSubmitTimesheet_Result>("TempSubmitTimesheet", timesheetMonthParameter, useridParameter, accountidParameter, projectidParameter, clientidParameter);
        }
    
        public virtual ObjectResult<TempTimesheetonLeavesandHolidays_Result> TempTimesheetonLeavesandHolidays(Nullable<System.DateTime> timesheetMonth, Nullable<int> userid, Nullable<int> accountid, string projectid, Nullable<int> clientprojID)
        {
            var timesheetMonthParameter = timesheetMonth.HasValue ?
                new ObjectParameter("timesheetMonth", timesheetMonth) :
                new ObjectParameter("timesheetMonth", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var accountidParameter = accountid.HasValue ?
                new ObjectParameter("Accountid", accountid) :
                new ObjectParameter("Accountid", typeof(int));
    
            var projectidParameter = projectid != null ?
                new ObjectParameter("Projectid", projectid) :
                new ObjectParameter("Projectid", typeof(string));
    
            var clientprojIDParameter = clientprojID.HasValue ?
                new ObjectParameter("ClientprojID", clientprojID) :
                new ObjectParameter("ClientprojID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TempTimesheetonLeavesandHolidays_Result>("TempTimesheetonLeavesandHolidays", timesheetMonthParameter, useridParameter, accountidParameter, projectidParameter, clientprojIDParameter);
        }
    
        public virtual ObjectResult<TEST_GETALL_USERSTIMESHEETS_WEB_Result> TEST_GETALL_USERSTIMESHEETS_WEB(string userid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TEST_GETALL_USERSTIMESHEETS_WEB_Result>("TEST_GETALL_USERSTIMESHEETS_WEB", useridParameter);
        }
    
        public virtual int TimesheetManagerActions(Nullable<int> userid, Nullable<int> cL_ProjId, Nullable<int> timesheetID, Nullable<int> managerId, string comments, string submittedType, ObjectParameter trans_Output)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var cL_ProjIdParameter = cL_ProjId.HasValue ?
                new ObjectParameter("CL_ProjId", cL_ProjId) :
                new ObjectParameter("CL_ProjId", typeof(int));
    
            var timesheetIDParameter = timesheetID.HasValue ?
                new ObjectParameter("TimesheetID", timesheetID) :
                new ObjectParameter("TimesheetID", typeof(int));
    
            var managerIdParameter = managerId.HasValue ?
                new ObjectParameter("ManagerId", managerId) :
                new ObjectParameter("ManagerId", typeof(int));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var submittedTypeParameter = submittedType != null ?
                new ObjectParameter("SubmittedType", submittedType) :
                new ObjectParameter("SubmittedType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TimesheetManagerActions", useridParameter, cL_ProjIdParameter, timesheetIDParameter, managerIdParameter, commentsParameter, submittedTypeParameter, trans_Output);
        }
    
        public virtual int UpdateHoliday(string holidayname, Nullable<int> holidaid, ObjectParameter message)
        {
            var holidaynameParameter = holidayname != null ?
                new ObjectParameter("Holidayname", holidayname) :
                new ObjectParameter("Holidayname", typeof(string));
    
            var holidaidParameter = holidaid.HasValue ?
                new ObjectParameter("Holidaid", holidaid) :
                new ObjectParameter("Holidaid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateHoliday", holidaynameParameter, holidaidParameter, message);
        }
    
        public virtual ObjectResult<UpdateOtp_Result> UpdateOtp(string email, string otp, ObjectParameter message)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var otpParameter = otp != null ?
                new ObjectParameter("otp", otp) :
                new ObjectParameter("otp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UpdateOtp_Result>("UpdateOtp", emailParameter, otpParameter, message);
        }
    
        public virtual ObjectResult<USE__Ez_EvolutyzCornerWebDev__Result> USE__Ez_EvolutyzCornerWebDev_(string userid, Nullable<System.DateTime> timesheetstart, Nullable<System.DateTime> timesheetend, Nullable<int> accountid, Nullable<int> projectid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var timesheetstartParameter = timesheetstart.HasValue ?
                new ObjectParameter("Timesheetstart", timesheetstart) :
                new ObjectParameter("Timesheetstart", typeof(System.DateTime));
    
            var timesheetendParameter = timesheetend.HasValue ?
                new ObjectParameter("Timesheetend", timesheetend) :
                new ObjectParameter("Timesheetend", typeof(System.DateTime));
    
            var accountidParameter = accountid.HasValue ?
                new ObjectParameter("accountid", accountid) :
                new ObjectParameter("accountid", typeof(int));
    
            var projectidParameter = projectid.HasValue ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USE__Ez_EvolutyzCornerWebDev__Result>("USE__Ez_EvolutyzCornerWebDev_", useridParameter, timesheetstartParameter, timesheetendParameter, accountidParameter, projectidParameter);
        }
    
        public virtual ObjectResult<USE__Ez_EvolutyzCornerWebProd__Result> USE__Ez_EvolutyzCornerWebProd_(string userid, Nullable<System.DateTime> timesheetstart, Nullable<System.DateTime> timesheetend, Nullable<int> accountid, Nullable<int> projectid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var timesheetstartParameter = timesheetstart.HasValue ?
                new ObjectParameter("Timesheetstart", timesheetstart) :
                new ObjectParameter("Timesheetstart", typeof(System.DateTime));
    
            var timesheetendParameter = timesheetend.HasValue ?
                new ObjectParameter("Timesheetend", timesheetend) :
                new ObjectParameter("Timesheetend", typeof(System.DateTime));
    
            var accountidParameter = accountid.HasValue ?
                new ObjectParameter("accountid", accountid) :
                new ObjectParameter("accountid", typeof(int));
    
            var projectidParameter = projectid.HasValue ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USE__Ez_EvolutyzCornerWebProd__Result>("USE__Ez_EvolutyzCornerWebProd_", useridParameter, timesheetstartParameter, timesheetendParameter, accountidParameter, projectidParameter);
        }
    
        public virtual ObjectResult<USE__Ez_EvolutyzCornerWebTesting__Result> USE__Ez_EvolutyzCornerWebTesting_(string userid, Nullable<System.DateTime> timesheetstart, Nullable<System.DateTime> timesheetend, Nullable<int> accountid, Nullable<int> projectid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var timesheetstartParameter = timesheetstart.HasValue ?
                new ObjectParameter("Timesheetstart", timesheetstart) :
                new ObjectParameter("Timesheetstart", typeof(System.DateTime));
    
            var timesheetendParameter = timesheetend.HasValue ?
                new ObjectParameter("Timesheetend", timesheetend) :
                new ObjectParameter("Timesheetend", typeof(System.DateTime));
    
            var accountidParameter = accountid.HasValue ?
                new ObjectParameter("accountid", accountid) :
                new ObjectParameter("accountid", typeof(int));
    
            var projectidParameter = projectid.HasValue ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USE__Ez_EvolutyzCornerWebTesting__Result>("USE__Ez_EvolutyzCornerWebTesting_", useridParameter, timesheetstartParameter, timesheetendParameter, accountidParameter, projectidParameter);
        }
    
        public virtual ObjectResult<UserAuthenticateWithToken_Result> UserAuthenticateWithToken(string userid, string password, string token, ObjectParameter message)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserAuthenticateWithToken_Result>("UserAuthenticateWithToken", useridParameter, passwordParameter, tokenParameter, message);
        }
    
        public virtual int UserLeaveManagerActionsfromEmail(Nullable<int> userid, Nullable<int> leaveID, Nullable<int> managerId, Nullable<int> statusType, ObjectParameter trans_Output)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var leaveIDParameter = leaveID.HasValue ?
                new ObjectParameter("LeaveID", leaveID) :
                new ObjectParameter("LeaveID", typeof(int));
    
            var managerIdParameter = managerId.HasValue ?
                new ObjectParameter("ManagerId", managerId) :
                new ObjectParameter("ManagerId", typeof(int));
    
            var statusTypeParameter = statusType.HasValue ?
                new ObjectParameter("StatusType", statusType) :
                new ObjectParameter("StatusType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserLeaveManagerActionsfromEmail", useridParameter, leaveIDParameter, managerIdParameter, statusTypeParameter, trans_Output);
        }
    
        public virtual int UserWFHManagerActionsfromEmail(Nullable<int> userid, Nullable<int> wFHID, Nullable<int> managerId, Nullable<int> statusType, ObjectParameter trans_Output)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var wFHIDParameter = wFHID.HasValue ?
                new ObjectParameter("WFHID", wFHID) :
                new ObjectParameter("WFHID", typeof(int));
    
            var managerIdParameter = managerId.HasValue ?
                new ObjectParameter("ManagerId", managerId) :
                new ObjectParameter("ManagerId", typeof(int));
    
            var statusTypeParameter = statusType.HasValue ?
                new ObjectParameter("StatusType", statusType) :
                new ObjectParameter("StatusType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserWFHManagerActionsfromEmail", useridParameter, wFHIDParameter, managerIdParameter, statusTypeParameter, trans_Output);
        }
    
        public virtual int ValidatetoResetPassword(string email, string otp, string newPassword, string confirmPassword, ObjectParameter message)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var otpParameter = otp != null ?
                new ObjectParameter("otp", otp) :
                new ObjectParameter("otp", typeof(string));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(string));
    
            var confirmPasswordParameter = confirmPassword != null ?
                new ObjectParameter("ConfirmPassword", confirmPassword) :
                new ObjectParameter("ConfirmPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ValidatetoResetPassword", emailParameter, otpParameter, newPasswordParameter, confirmPasswordParameter, message);
        }
    
        public virtual int WebEditSubmitTaskDetails(Nullable<int> timesheetID, Nullable<int> taskId, string hoursWorked, Nullable<System.DateTime> taskDate, ObjectParameter trans_Output)
        {
            var timesheetIDParameter = timesheetID.HasValue ?
                new ObjectParameter("TimesheetID", timesheetID) :
                new ObjectParameter("TimesheetID", typeof(int));
    
            var taskIdParameter = taskId.HasValue ?
                new ObjectParameter("TaskId", taskId) :
                new ObjectParameter("TaskId", typeof(int));
    
            var hoursWorkedParameter = hoursWorked != null ?
                new ObjectParameter("HoursWorked", hoursWorked) :
                new ObjectParameter("HoursWorked", typeof(string));
    
            var taskDateParameter = taskDate.HasValue ?
                new ObjectParameter("TaskDate", taskDate) :
                new ObjectParameter("TaskDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WebEditSubmitTaskDetails", timesheetIDParameter, taskIdParameter, hoursWorkedParameter, taskDateParameter, trans_Output);
        }
    
        public virtual int WebEditSubmitTimesheet(Nullable<int> timesheetID, Nullable<int> userID, string comments, string submittedType, ObjectParameter trans_Output)
        {
            var timesheetIDParameter = timesheetID.HasValue ?
                new ObjectParameter("TimesheetID", timesheetID) :
                new ObjectParameter("TimesheetID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var submittedTypeParameter = submittedType != null ?
                new ObjectParameter("SubmittedType", submittedType) :
                new ObjectParameter("SubmittedType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WebEditSubmitTimesheet", timesheetIDParameter, userIDParameter, commentsParameter, submittedTypeParameter, trans_Output);
        }
    
        public virtual ObjectResult<WebGetAccountHolderTimeSheets_Result> WebGetAccountHolderTimeSheets(string userid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WebGetAccountHolderTimeSheets_Result>("WebGetAccountHolderTimeSheets", useridParameter);
        }
    
        public virtual ObjectResult<WebGetProfileDetails_Result> WebGetProfileDetails(Nullable<int> userProfileid)
        {
            var userProfileidParameter = userProfileid.HasValue ?
                new ObjectParameter("UserProfileid", userProfileid) :
                new ObjectParameter("UserProfileid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WebGetProfileDetails_Result>("WebGetProfileDetails", userProfileidParameter);
        }
    
        public virtual ObjectResult<WebGetTimeSheetforApproval_Result> WebGetTimeSheetforApproval(string userid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WebGetTimeSheetforApproval_Result>("WebGetTimeSheetforApproval", useridParameter);
        }
    
        public virtual ObjectResult<WebgetUserbyMonthlyTimesheet_Result> WebgetUserbyMonthlyTimesheet(string userid, Nullable<System.DateTime> timesheetstart, Nullable<System.DateTime> timesheetend, Nullable<int> accountid, Nullable<int> projectid, Nullable<int> clientprojID)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var timesheetstartParameter = timesheetstart.HasValue ?
                new ObjectParameter("Timesheetstart", timesheetstart) :
                new ObjectParameter("Timesheetstart", typeof(System.DateTime));
    
            var timesheetendParameter = timesheetend.HasValue ?
                new ObjectParameter("Timesheetend", timesheetend) :
                new ObjectParameter("Timesheetend", typeof(System.DateTime));
    
            var accountidParameter = accountid.HasValue ?
                new ObjectParameter("accountid", accountid) :
                new ObjectParameter("accountid", typeof(int));
    
            var projectidParameter = projectid.HasValue ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(int));
    
            var clientprojIDParameter = clientprojID.HasValue ?
                new ObjectParameter("ClientprojID", clientprojID) :
                new ObjectParameter("ClientprojID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WebgetUserbyMonthlyTimesheet_Result>("WebgetUserbyMonthlyTimesheet", useridParameter, timesheetstartParameter, timesheetendParameter, accountidParameter, projectidParameter, clientprojIDParameter);
        }
    
        public virtual ObjectResult<WebgetUserbyMonthlyTimesheet15days_Result> WebgetUserbyMonthlyTimesheet15days(string userid, Nullable<System.DateTime> timesheetstart, Nullable<System.DateTime> timesheetend, Nullable<int> accountid, Nullable<int> projectid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var timesheetstartParameter = timesheetstart.HasValue ?
                new ObjectParameter("Timesheetstart", timesheetstart) :
                new ObjectParameter("Timesheetstart", typeof(System.DateTime));
    
            var timesheetendParameter = timesheetend.HasValue ?
                new ObjectParameter("Timesheetend", timesheetend) :
                new ObjectParameter("Timesheetend", typeof(System.DateTime));
    
            var accountidParameter = accountid.HasValue ?
                new ObjectParameter("accountid", accountid) :
                new ObjectParameter("accountid", typeof(int));
    
            var projectidParameter = projectid.HasValue ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WebgetUserbyMonthlyTimesheet15days_Result>("WebgetUserbyMonthlyTimesheet15days", useridParameter, timesheetstartParameter, timesheetendParameter, accountidParameter, projectidParameter);
        }
    
        public virtual ObjectResult<WebgetUserbyweeklyTimesheet_Result> WebgetUserbyweeklyTimesheet(string userid, Nullable<System.DateTime> timesheetstart, Nullable<System.DateTime> timesheetend, Nullable<int> accountid, Nullable<int> projectid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var timesheetstartParameter = timesheetstart.HasValue ?
                new ObjectParameter("Timesheetstart", timesheetstart) :
                new ObjectParameter("Timesheetstart", typeof(System.DateTime));
    
            var timesheetendParameter = timesheetend.HasValue ?
                new ObjectParameter("Timesheetend", timesheetend) :
                new ObjectParameter("Timesheetend", typeof(System.DateTime));
    
            var accountidParameter = accountid.HasValue ?
                new ObjectParameter("accountid", accountid) :
                new ObjectParameter("accountid", typeof(int));
    
            var projectidParameter = projectid.HasValue ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WebgetUserbyweeklyTimesheet_Result>("WebgetUserbyweeklyTimesheet", useridParameter, timesheetstartParameter, timesheetendParameter, accountidParameter, projectidParameter);
        }
    
        public virtual ObjectResult<WebgetUserTimesheet_Result> WebgetUserTimesheet(string userid, Nullable<System.DateTime> timesheetmonth, Nullable<int> clientprojID, Nullable<int> timesheetID)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var timesheetmonthParameter = timesheetmonth.HasValue ?
                new ObjectParameter("Timesheetmonth", timesheetmonth) :
                new ObjectParameter("Timesheetmonth", typeof(System.DateTime));
    
            var clientprojIDParameter = clientprojID.HasValue ?
                new ObjectParameter("ClientprojID", clientprojID) :
                new ObjectParameter("ClientprojID", typeof(int));
    
            var timesheetIDParameter = timesheetID.HasValue ?
                new ObjectParameter("TimesheetID", timesheetID) :
                new ObjectParameter("TimesheetID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WebgetUserTimesheet_Result>("WebgetUserTimesheet", useridParameter, timesheetmonthParameter, clientprojIDParameter, timesheetIDParameter);
        }
    
        public virtual int WebValidTimesheetMonthExits(Nullable<int> userID, Nullable<System.DateTime> timesheetMonth, Nullable<int> clientProjtId, ObjectParameter trans_Output)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var timesheetMonthParameter = timesheetMonth.HasValue ?
                new ObjectParameter("TimesheetMonth", timesheetMonth) :
                new ObjectParameter("TimesheetMonth", typeof(System.DateTime));
    
            var clientProjtIdParameter = clientProjtId.HasValue ?
                new ObjectParameter("ClientProjtId", clientProjtId) :
                new ObjectParameter("ClientProjtId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WebValidTimesheetMonthExits", userIDParameter, timesheetMonthParameter, clientProjtIdParameter, trans_Output);
        }
    
        public virtual ObjectResult<Weekly_WebGetTimeSheetforApproval_Result> Weekly_WebGetTimeSheetforApproval(string userid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Weekly_WebGetTimeSheetforApproval_Result>("Weekly_WebGetTimeSheetforApproval", useridParameter);
        }
    }
}
